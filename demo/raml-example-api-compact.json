[
    {
    "@id": "",
    "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#431",
    "@type": [
    "apiContract:WebAPI",
    "doc:RootDomainElement",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "My super cool, example API"
    }
    ],
    "apiContract:server": [
    {
    "@id": "#853",
    "@type": [
    "apiContract:Server",
    "doc:DomainElement"
    ],
    "core:urlTemplate": [
    {
    "@value": "http://{environment}.api.domain.com/{version}/"
    }
    ],
    "apiContract:variable": [
    {
    "@id": "#854",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "environment"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "environment"
    }
    ],
    "core:description": [
    {
    "@value": "API environment. The value can be one of \"development\", \"stage\" or \"production\"\nDevelopment environment is avaibale for dev keys (client id).\nStage is available internally only and keys are whitelisted for this environment. Keys that are not whitelisted will always return 404 for any call.\nProduction is available for redular keys (klient ids).\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#855",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^(development|stage|production)$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "API environment. The value can be one of \"development\", \"stage\" or \"production\"\nDevelopment environment is avaibale for dev keys (client id).\nStage is available internally only and keys are whitelisted for this environment. Keys that are not whitelisted will always return 404 for any call.\nProduction is available for redular keys (klient ids).\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#856",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#857",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "production"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "production"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#856/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#856/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#856"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#854"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#858",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "version"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#859",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "version"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:accepts": [
    {
    "@value": "application/json"
    },
    {
    "@value": "application/xml"
    }
    ],
    "apiContract:contentType": [
    {
    "@value": "application/json"
    },
    {
    "@value": "application/xml"
    }
    ],
    "core:version": [
    {
    "@value": "v1"
    }
    ],
    "core:documentation": [
    {
    "@id": "#860",
    "@type": [
    "core:CreativeWork",
    "doc:DomainElement"
    ],
    "core:title": [
    {
    "@value": "Read this!"
    }
    ],
    "core:description": [
    {
    "@value": "# This is an example API spec\nThe API doesn't exists in the real world therefore calls made to any endpoint will always fail.\nIf you'd like to perform actual request and see the response try GitHub API (which doesn't require user authentication in some endpoints) or other APIs.\n\nNote that you may need a Client ID or valid authorization token to perform a call to some APIs that are secured by the OAuth 2 protocol.\n\nThank you for testing the API console. Your feedback is welcome. Email us: arc@mulesoft.com\n"
    }
    ]
    },
    {
    "@id": "#252",
    "@type": [
    "core:CreativeWork",
    "doc:DomainElement"
    ],
    "core:title": [
    {
    "@value": "About"
    }
    ],
    "core:description": [
    {
    "@value": "# About the example API\n\nThe `Example API` provides all definitions of the RAML 1.0 like types, security schemes, resource types and so on.\nMagic variables are special strings that are passed to any string property in the request and it will be replaced with other string that is defined for\nthis variable.\n\n## Example\nLet's say you want to generate a random number in the request. So the property\nvalue like:\n```\nhttp://www.domain.com/?time=${now}\n```\ncan produce:\n```\nhttp://www.domain.com/?time=12312312312\n```\n\n## Build-in magic variables.\n| Variable | Description | Example |\n| --- | --- | --- |\n| `${random}` | Will generate random number in range from 0 to Number.MAX_SAFE_INTEGER | 9007199254740991 |\n| `${random:NUMBER}` | A variation of `${random}` where the result will be remembered and can be used in other property. If the same `NUMBER` occurs again then previously generated value will be used. | 7199254740 |\n| `${now}` | Inserts current epoch time | 12312312312 |\n\n## Magic variables scopes\nThere are two types of magic variables:\n* **global** - Applied to every request,\n* **scoped** - Applied to a request enclosed in a project.\n\n### Global variables\nVariables of this type will be applied to every outgoing request.\n\n### Scoped variables.\nScoped variables are associated with a project and are applied to those request\nthat are added to corresponding project.\n\n## User magic variables\nThis element supports user defined variables. Variables defined by the user are kept\nin IndexedDB locally and retreived\nby the element on run time. Users can decide either the variable is global or scoped.\n\n## Database structure\n| Property | Type | Is key | Description |\n| --- | --- | --- | --- |\n| id | Number | Yes, key path | An autoincremental key for the rule |\n| variable | String | Yes | A variable name. It must be consisted with [0-9A-Za-z${}_-] |\n| value | String | No | Replacement value. Replacement value may include other magic variables |\n| type | String | Yes | Either `global` or `scoped` (for now) |\n| project | Number | Yes | Relevant if the `type` is set to `scoped`. The rule will be applied to the requests that are associated with this project. If not set if will be omnited. |\n\n## Usage\nThe element's `value` property contains a value that will be parsed during the work.\nIt may be either String or Object.\n\nWhile String is obvious, the Object will be treated differently. It will parse only\nstring values of each first level key.\nThis means that no deep objects will be taken into consideration.\nBefore start applying new magic variables the program should call `clear()`\nfunction to clear the groups defined by previous use.\nThe element will keep groups generated data so it can be uses many times on\ndifferent strings resulting with the same group values.\n\nJavaScript code:\n```javascript\n...\nthis.$.mv.clear();\nthis.set('headersList', headers);\nthis.$.mv.parse();\n...\n_onParsed = (e) => {\n  var headers = e.detail.result;\n};\n...\n```\nThe parse method returns a Promise which will be fulfilled when it finish parsing data:\n```javascript\n...\nthis.set('headersList', headers);\nthis.$.mv.parse()\n.then((result) => {\n  // parsed data\n});\n...\n```\n"
    }
    ]
    },
    {
    "@id": "#861",
    "@type": [
    "core:CreativeWork",
    "doc:DomainElement"
    ],
    "core:title": [
    {
    "@value": "Test docs"
    }
    ],
    "core:description": [
    {
    "@value": "# A test documentation.\nThis text was created by ARC's RAML editor.\nYou probably see this because you are testing ARC's web components and this component\nis responsible for displaying a documentation from the RAML definition.\n\nPlay around with the element and use it in your project.\nPlease, note the licensing information available in every ARC component.\nIf you have any question email me: arc@mulesoft.com\nOr slack me (internally only): Pawel Psztyc (P3)\n"
    }
    ]
    }
    ],
    "apiContract:endpoint": [
    {
    "@id": "#432",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/test-parameters/{feature}"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#433",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:description": [
    {
    "@value": "To test enum values in the URI parameters for inline type declaration."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#434",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:parameter": [
    {
    "@id": "#435",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "testRepeatable"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "testRepeatable"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#436",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#443",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#439",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#440",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#441",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "value1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    },
    {
    "@id": "#442",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "value2"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "- value1\n- value2"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#439/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#439/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#439"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#435"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#438",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Test parameter will be removed in next version of the API."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#446",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Test parameter will be removed in next version of the API."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    },
    {
    "@id": "#447",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "numericRepeatable"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "numericRepeatable"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#448/link--702359042",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#448"
    }
    ],
    "doc:link-label": [
    {
    "@value": "inline-type"
    }
    ]
    }
    ]
    },
    {
    "@id": "#458",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "notRequiredRepeatable"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "notRequiredRepeatable"
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#459",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#462",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#date"
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#461",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#464",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#466",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This method is deprecated and will be removed."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "amf://id#327": {
    "core:extensionName": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "@id": "#468",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:level": [
    {
    "@id": "#469",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:signature": [
    {
    "@id": "#470",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "230-ghtwvfrs1itr"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    },
    {
    "@id": "#327"
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#485",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "feature"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "feature"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#486",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "shacl:in": [
    {
    "@id": "#486/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#487",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "A"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#488",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "B"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#489",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "C"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#491",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This endpoint is deprecated and will be removed."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    },
    {
    "@id": "#492",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/test-parameters/{feature}/{typeFeature}"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#493",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:description": [
    {
    "@value": "To test enum values in the URI parameters for global type declaration."
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#495",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This endpoint is deprecated and will be removed."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#496",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "feature"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "feature"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#497",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "shacl:in": [
    {
    "@id": "#497/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#487",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "A"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#488",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "B"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#489",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "C"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#498",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "typeFeature"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "typeFeature"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#499",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "Feature"
    }
    ],
    "core:description": [
    {
    "@value": "A feature to test enum values in the URI parameters."
    }
    ],
    "shacl:in": [
    {
    "@id": "#499/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#369",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "A"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#370",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "B"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#371",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "C"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#501",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#503",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#505",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#507",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This method will be removed in future release of the API."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    },
    {
    "@id": "#325"
    }
    ]
    },
    {
    "@id": "#508",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/people"
    }
    ],
    "core:name": [
    {
    "@value": "People"
    }
    ],
    "core:description": [
    {
    "@value": "The people API used to access data about the people."
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#509",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:name": [
    {
    "@value": "List people"
    }
    ],
    "core:description": [
    {
    "@value": "Use this method to list all the people."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#513",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:parameter": [
    {
    "@id": "#522",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "limit"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "limit"
    }
    ],
    "core:description": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#523",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:minInclusive": [
    {
    "@value": 1.0
    }
    ],
    "shacl:maxInclusive": [
    {
    "@value": 300.0
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#524",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "25"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#525",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#526",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "100"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#525/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#525/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#525"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#527"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#528",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "start"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "start"
    }
    ],
    "core:description": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#529",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:minInclusive": [
    {
    "@value": 0.0
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#530",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "0"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#531",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#532",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "25"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#531/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#531/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#531"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#533"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#534",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "nextPageToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "nextPageToken"
    }
    ],
    "core:description": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#535",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[a-zA-Z0-9]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#536",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#537",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#536/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#536/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#536"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#538"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:header": [
    {
    "@id": "#514",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#515",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#516",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#517",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#516/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#516/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#516"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#514"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#519",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#521",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#541",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "core:description": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#542",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#543",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#544",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#items"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#545",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#352/link--1471446162",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#352"
    }
    ],
    "doc:link-label": [
    {
    "@value": "AppPerson"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ]
    },
    {
    "@id": "#546",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#nextPageToken"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#547",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "nextPageToken"
    }
    ],
    "core:description": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#548",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#549",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "nextPageToken"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#550",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "400"
    }
    ],
    "core:name": [
    {
    "@value": "400"
    }
    ],
    "core:description": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#551",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#552",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#553",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#554",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#555",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#556",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#557",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#558",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#559",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#560",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Invalid"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#510",
    "@type": [
    "apiContract:ParametrizedTrait",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Paginated"
    }
    ],
    "doc:target": [
    {
    "@id": "#13",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Paginated"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#196",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#197",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The collection of <<resourcePathName>>."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:queryParameters": [
    {
    "@id": "#198",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:limit": [
    {
    "@id": "#199",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#200",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#201",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:maximum": [
    {
    "@id": "#202",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "300"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#203",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#204",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#205",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:start": [
    {
    "@id": "#206",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#207",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#208",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#209",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#210",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#211",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#212",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#213",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_18"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#214",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_19"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#215",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_20"
    }
    ]
    }
    ],
    "data:pattern": [
    {
    "@id": "#216",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "[a-zA-Z0-9]+"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_21"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#217",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#218",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#219",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_24"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#220",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#221",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#222",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_27"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#223",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:items": [
    {
    "@id": "#224",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#225",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "array"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_30"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#226",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_31"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#227",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_32"
    }
    ]
    }
    ],
    "data:items": [
    {
    "@id": "#228",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<resourceType>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_33"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_29"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#229",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#230",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_35"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#231",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_36"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#232",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_37"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#233",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_38"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_34"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_28"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_26"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_25"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_23"
    }
    ]
    }
    ],
    "data:400": [
    {
    "@id": "#234",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#235",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_40"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#236",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#237",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#238",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_43"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#239",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_44"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#240",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:error": [
    {
    "@id": "#241",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#242",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_47"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#243",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_48"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#244",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_49"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#245",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_50"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_46"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#246",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#247",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_52"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#248",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_53"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#249",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_54"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#250",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_55"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_51"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_45"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_42"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_41"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_39"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_22"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@value": "resourceType"
    },
    {
    "@value": "resourcePathName"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@id": "#511",
    "@type": [
    "doc:VariableValue",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "resourceType"
    }
    ],
    "doc:value": [
    {
    "@id": "#512",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AppPerson"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#540",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    },
    {
    "@id": "#561",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "post"
    }
    ],
    "core:name": [
    {
    "@value": "Create a person"
    }
    ],
    "core:description": [
    {
    "@value": "Use this method to add new person"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#562",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:header": [
    {
    "@id": "#563",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#564",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#565",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#566",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#565/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#565/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#565"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#563"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#568",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#570",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#571",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#572",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#176",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#tagline"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#177",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ],
    "core:description": [
    {
    "@value": "The brief description (tagline) of this person."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ]
    },
    {
    "@id": "#178",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#179",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z ]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Person full name. The input will be rejected if this property is not set while creating new object."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#180",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#181",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "John Smith"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "John Smith"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#182",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#183",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of this person's profile."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#186",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#187",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#184",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#language"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#185",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ],
    "core:description": [
    {
    "@value": "The user's preferred language for rendering."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ]
    },
    {
    "@id": "#188",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#birthday"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#189",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ],
    "core:description": [
    {
    "@value": "The person's date of birth, represented as YYYY-MM-DD."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ]
    },
    {
    "@id": "#190",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#image"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#12/link-1314619410",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#12"
    }
    ],
    "doc:link-label": [
    {
    "@value": "image"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ]
    },
    {
    "@id": "#191",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#gender"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#192",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "gender?"
    }
    ],
    "core:description": [
    {
    "@value": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "gender"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AppPerson"
    }
    ],
    "core:name": [
    {
    "@value": "A person resource"
    }
    ],
    "core:description": [
    {
    "@value": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n"
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#574",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This response type is deprecated and soon will be replaced."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    }
    ]
    },
    {
    "@id": "#576",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#577",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#578",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#8"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/person.xml"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#578/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#578/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#578"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#576"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#255"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/schemas/person.xsd"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#580",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    },
    {
    "@id": "#581",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/people/{personId}"
    }
    ],
    "core:name": [
    {
    "@value": "A person"
    }
    ],
    "core:description": [
    {
    "@value": "The endpoint to access information about the person"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#582",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:name": [
    {
    "@value": "Get a person"
    }
    ],
    "core:description": [
    {
    "@value": "Returns a person"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#583",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:header": [
    {
    "@id": "#584",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-client-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-client-id"
    }
    ],
    "core:description": [
    {
    "@value": "The application id used to make a request. It can be obtained in the developer console."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#585",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The application id used to make a request. It can be obtained in the developer console."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#586",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#587",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123456-acme.client.com"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "123456-acme.client.com"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#586/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#586/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#586"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#584"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#589",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This will be replaced"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    }
    ],
    "amf://id#325": {
    "core:extensionName": [
    {
    "@value": "deprecated"
    }
    ],
    "@id": "#591",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This will be replaced"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#325"
    }
    ]
    },
    {
    "@id": "#592",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#593",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#594",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#595",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#594/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#594/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#594"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#592"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#597",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#599",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#600",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#601",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#352/link--1471446162",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#352"
    }
    ],
    "doc:link-label": [
    {
    "@value": "AppPerson"
    }
    ]
    }
    ]
    },
    {
    "@id": "#602",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#603",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#604",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#8"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/person.xml"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#604/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#604/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#604"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#602"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#255"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/schemas/person.xsd"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#605",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "404"
    }
    ],
    "core:name": [
    {
    "@value": "404"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#606",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#607",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#339",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#340",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#341",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#342",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#343",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#344",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#345",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#346",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#347",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<example>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "<<example>>"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "ErrorResource"
    }
    ],
    "core:name": [
    {
    "@value": "Not found response"
    }
    ],
    "core:description": [
    {
    "@value": "A response that is errored"
    }
    ]
    }
    ]
    },
    {
    "@id": "#609",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#610",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Not found response"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#611",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#611/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#611/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#611"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#609"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "doc:location": [
    {
    "@value": ""
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#612",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "delete"
    }
    ],
    "core:name": [
    {
    "@value": "Remove a person"
    }
    ],
    "core:description": [
    {
    "@value": "Removes the person from the datastore. This method do not returns any data in 200 response."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#613",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:header": [
    {
    "@id": "#614",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#615",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#616",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#617",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#616/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#616/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#616"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#614"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#619",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#621",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#622",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "204"
    }
    ],
    "core:name": [
    {
    "@value": "204"
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#623",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "put"
    }
    ],
    "core:name": [
    {
    "@value": "Update a person"
    }
    ],
    "core:description": [
    {
    "@value": "Updates the person in the datastore."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#624",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:header": [
    {
    "@id": "#625",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "x-people-op-id"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#626",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[4][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "People ops ID. It is UUID v4 string"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#627",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#628",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "9719fa6f-c666-48e0-a191-290890760b30"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#627/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#627/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#627"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#625"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#630",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#632",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#633",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#352/link--1471446162",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#352"
    }
    ],
    "doc:link-label": [
    {
    "@value": "AppPerson"
    }
    ]
    }
    ]
    },
    {
    "@id": "#634",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#635",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#636",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#8"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/person.xml"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#636/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#636/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#636"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#634"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#255"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/schemas/person.xsd"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#637",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#638",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "personId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "personId"
    }
    ],
    "core:description": [
    {
    "@value": "The ID of the person in the system. It is generated by the database numeric value for the person."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#639",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The ID of the person in the system. It is generated by the database numeric value for the person."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#640",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#641",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1234"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "1234"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#640/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#640/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#640"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#638"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#337",
    "@type": [
    "apiContract:ParametrizedResourceType",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ResourceNotFound"
    }
    ],
    "doc:target": [
    {
    "@id": "#378",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ResourceNotFound"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#379",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#380",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:get": [
    {
    "@id": "#381",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:responses": [
    {
    "@id": "#382",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:404": [
    {
    "@id": "#383",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:body": [
    {
    "@id": "#384",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#385",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#386",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#387",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:application%2Fxml": [
    {
    "@id": "#388",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#389",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#390",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#391",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#642",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/products"
    }
    ],
    "core:name": [
    {
    "@value": "Products"
    }
    ],
    "core:description": [
    {
    "@value": "The API is to be used to access data about the products."
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#643",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:name": [
    {
    "@value": "List products"
    }
    ],
    "core:description": [
    {
    "@value": "Returns a list of products."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#647",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:parameter": [
    {
    "@id": "#648",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "limit"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "limit"
    }
    ],
    "core:description": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#649",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:minInclusive": [
    {
    "@value": 1.0
    }
    ],
    "shacl:maxInclusive": [
    {
    "@value": 300.0
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#650",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "25"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#651",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#652",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "100"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#651/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#651/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#651"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#527"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#653",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "start"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "start"
    }
    ],
    "core:description": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#654",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:minInclusive": [
    {
    "@value": 0.0
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#655",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "0"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#656",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#657",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "25"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#656/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#656/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#656"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#533"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#658",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "nextPageToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "nextPageToken"
    }
    ],
    "core:description": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#659",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[a-zA-Z0-9]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#660",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#661",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#660/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#660/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#660"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#538"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#662",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "core:description": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#663",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#664",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#665",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#items"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#666",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#355/link-889157668",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#355"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Product"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ]
    },
    {
    "@id": "#667",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#nextPageToken"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#668",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "nextPageToken"
    }
    ],
    "core:description": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#669",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#670",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "nextPageToken"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#671",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "400"
    }
    ],
    "core:name": [
    {
    "@value": "400"
    }
    ],
    "core:description": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#672",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#673",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#674",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#675",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#676",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#677",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#678",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#679",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#680",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#681",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Invalid"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#644",
    "@type": [
    "apiContract:ParametrizedTrait",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Paginated"
    }
    ],
    "doc:target": [
    {
    "@id": "#13",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Paginated"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#196",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#197",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The collection of <<resourcePathName>>."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:queryParameters": [
    {
    "@id": "#198",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:limit": [
    {
    "@id": "#199",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#200",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#201",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:maximum": [
    {
    "@id": "#202",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "300"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#203",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#204",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#205",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:start": [
    {
    "@id": "#206",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#207",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#208",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#209",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#210",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#211",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#212",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#213",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_18"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#214",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_19"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#215",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_20"
    }
    ]
    }
    ],
    "data:pattern": [
    {
    "@id": "#216",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "[a-zA-Z0-9]+"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_21"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#217",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#218",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#219",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_24"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#220",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#221",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#222",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_27"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#223",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:items": [
    {
    "@id": "#224",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#225",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "array"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_30"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#226",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_31"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#227",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_32"
    }
    ]
    }
    ],
    "data:items": [
    {
    "@id": "#228",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<resourceType>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_33"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_29"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#229",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#230",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_35"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#231",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_36"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#232",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_37"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#233",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_38"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_34"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_28"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_26"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_25"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_23"
    }
    ]
    }
    ],
    "data:400": [
    {
    "@id": "#234",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#235",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_40"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#236",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#237",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#238",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_43"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#239",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_44"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#240",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:error": [
    {
    "@id": "#241",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#242",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_47"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#243",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_48"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#244",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_49"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#245",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_50"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_46"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#246",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#247",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_52"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#248",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_53"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#249",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_54"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#250",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_55"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_51"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_45"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_42"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_41"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_39"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_22"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@value": "resourceType"
    },
    {
    "@value": "resourcePathName"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@id": "#645",
    "@type": [
    "doc:VariableValue",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "resourceType"
    }
    ],
    "doc:value": [
    {
    "@id": "#646",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#682",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "post"
    }
    ],
    "core:name": [
    {
    "@value": "Create product"
    }
    ],
    "core:description": [
    {
    "@value": "Creates a product in the store.\nWhile creating a product the `id` and `etag` properties will be ignored.\n\nThe endpoint will reject the request if exactly the same product is already defined in the\ndatastore (all properties of both objects equals). Newly created product is available\nfor listing but **it won't be available for ordering API** until it's availability is not set.\n"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#683",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:payload": [
    {
    "@id": "#684",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#355/link-889157668",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#355"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Product"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#685",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#686",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#687",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#267",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#upc"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#268",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9]{12,12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ],
    "core:description": [
    {
    "@value": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#269",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#270",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "042100005264"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "042100005264"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ]
    },
    {
    "@id": "#271",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#272",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Product name"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#273",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#274",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#275",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#276",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#277",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#unit"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#278",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ],
    "core:description": [
    {
    "@value": "The unit of measuremet for the quantity property."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#279",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#280",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ml"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ]
    },
    {
    "@id": "#281",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#available"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#282",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ],
    "core:description": [
    {
    "@value": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#283",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#284",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ]
    },
    {
    "@id": "#285",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#quantity"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#286",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ],
    "core:description": [
    {
    "@value": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#287",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#288",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "500"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "500"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Product"
    }
    ],
    "core:name": [
    {
    "@value": "A product resource"
    }
    ],
    "core:description": [
    {
    "@value": "A single product representing an item in the store."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#688",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Product"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#689",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#690",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "d697f5cea85011e680f576304dec7eb7"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#691",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Super product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:quantity": [
    {
    "@id": "#692",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "125"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:unit": [
    {
    "@id": "#693",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:upc": [
    {
    "@id": "#694",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123456789101"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:available": [
    {
    "@id": "#695",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#696",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W/\"686897696a7c876b7e\""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: d697f5cea85011e680f576304dec7eb7\nname: Super product\nquantity: 125\nunit: ml\nupc: \"123456789101\"\navailable: true\netag: \"W/\\\"686897696a7c876b7e\\\"\""
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#688/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#688/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#688"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#686"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#697",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "OtherProduct"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#698",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#699",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123e4567e89b12d3a456426655440000"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#700",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme Product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:quantity": [
    {
    "@id": "#701",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:unit": [
    {
    "@id": "#702",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "kg"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:upc": [
    {
    "@id": "#703",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "223456789101"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:available": [
    {
    "@id": "#704",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#705",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W/\"123456789\""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: 123e4567e89b12d3a456426655440000\nname: Acme Product\nquantity: 1\nunit: kg\nupc: \"223456789101\"\navailable: true\netag: \"W/\\\"123456789\\\"\""
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#697/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#697/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#697"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#686"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#707",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ]
    },
    {
    "@id": "#709",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#710",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#711",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#6"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/product.xml"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#711/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#711/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#711"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#709"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#24"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/schemas/product.xsd"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#712",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "400"
    }
    ],
    "core:name": [
    {
    "@value": "400"
    }
    ],
    "core:description": [
    {
    "@value": "The request has been rejected. Probably the product already exists in the datastore."
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#713",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/products/{productId}"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#714",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#715",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#365",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#355/link-889157668",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#355"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Product"
    }
    ]
    }
    ]
    },
    {
    "@id": "#716",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#717",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#718",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#6"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/product.xml"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#718/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#718/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#718"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#716"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#24"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/schemas/product.xsd"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#719",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "404"
    }
    ],
    "core:name": [
    {
    "@value": "404"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#720",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#721",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#339",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#340",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#341",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#342",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#343",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#344",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#345",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#346",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#347",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<example>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "<<example>>"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "ErrorResource"
    }
    ],
    "core:name": [
    {
    "@value": "Not found response"
    }
    ],
    "core:description": [
    {
    "@value": "A response that is errored"
    }
    ]
    }
    ]
    },
    {
    "@id": "#722",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#723",
    "@type": [
    "raml-shapes:SchemaShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/xml"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Not found response"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#724",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#724/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#724/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#724"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#722"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "doc:location": [
    {
    "@value": ""
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#725",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "productId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "productId"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#726",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "productId"
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#338",
    "@type": [
    "apiContract:ParametrizedResourceType",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ResourceNotFound"
    }
    ],
    "doc:target": [
    {
    "@id": "#378",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ResourceNotFound"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#379",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#380",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:get": [
    {
    "@id": "#381",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:responses": [
    {
    "@id": "#382",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:404": [
    {
    "@id": "#383",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:body": [
    {
    "@id": "#384",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#385",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#386",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#387",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:application%2Fxml": [
    {
    "@id": "#388",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#389",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#390",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#391",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#727",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/orgs"
    }
    ]
    },
    {
    "@id": "#728",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/orgs/{orgId}"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#729",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:name": [
    {
    "@value": "Get organization"
    }
    ],
    "core:description": [
    {
    "@value": "Returns an organization info."
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#730",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#731",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#732",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#752",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#753",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "UUID generated ID"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#116",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#Head"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "Head"
    }
    ]
    },
    {
    "@id": "#115",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#onCall"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#87/link--501879633",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#87"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Alertable"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "onCall"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Org"
    }
    ],
    "core:description": [
    {
    "@value": "Represents an organization unit."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#733",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#734",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#735",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "12345"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:onCall": [
    {
    "@id": "#736",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#737",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "nico"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#738",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ark"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#739",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:clearanceLevel": [
    {
    "@id": "#740",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:phone": [
    {
    "@id": "#741",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "12321"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:Head": [
    {
    "@id": "#742",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#743",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "nico"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#744",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ark"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#745",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeManager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:reports": [
    {
    "@id": "#746",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#747",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#748",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "nico"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#749",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ark"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#750",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "admin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_14"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_13"
    }
    ]
    }
    ],
    "data:phone": [
    {
    "@id": "#751",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123-23"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_18"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: \"12345\"\nonCall:\n  firstname: nico\n  lastname: ark\n  kind: AcmeAdmin\n  clearanceLevel: low\n  phone: \"12321\"\nHead:\n  firstname: nico\n  lastname: ark\n  kind: AcmeManager\n  reports:\n    -\n      firstname: nico\n      lastname: ark\n      kind: admin\n  phone: \"123-23\""
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#733/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#733/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#733"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#731"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#755",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "put"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#756",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:payload": [
    {
    "@id": "#757",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#758",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#759",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#760",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "UUID generated ID"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#116",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#Head"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "Head"
    }
    ]
    },
    {
    "@id": "#115",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#onCall"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#87/link--501879633",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#87"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Alertable"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "onCall"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Org"
    }
    ],
    "core:description": [
    {
    "@value": "Represents an organization unit."
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#761",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#762",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#114/link-594065656",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#114"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Org"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#763",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "orgId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "orgId"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#764",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "orgId"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#765",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/orgs/{orgId}/managers"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#766",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#767",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#768",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#769/link-1618209084",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#769"
    }
    ],
    "doc:link-label": [
    {
    "@value": "inline-type"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#770",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "orgId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "orgId"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "path"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#771",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "orgId"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#772",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/messages"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#773",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "post"
    }
    ],
    "core:description": [
    {
    "@value": "Create a new message"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#775",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:payload": [
    {
    "@id": "#776",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#777",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#778",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#receiver"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#779",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "receiver"
    }
    ],
    "core:description": [
    {
    "@value": "receiver of the message"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "receiver"
    }
    ]
    },
    {
    "@id": "#780",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#body"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#781",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "body"
    }
    ],
    "core:description": [
    {
    "@value": "A message body"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "body"
    }
    ]
    },
    {
    "@id": "#782",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#important"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#783",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ],
    "core:description": [
    {
    "@value": "If true then the message will be marked as important"
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#784",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "false"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#785",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#786",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "X-Amin-Resource"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "X-Amin-Resource"
    }
    ],
    "core:description": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#787",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "core:description": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#788",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "false"
    }
    ]
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": []
    },
    {
    "@id": "#789",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#790",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#791",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#774",
    "@type": [
    "apiContract:ParametrizedTrait",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Adminable"
    }
    ],
    "doc:target": [
    {
    "@id": "#423",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Adminable"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#51",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#52",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Use this to mark a resource that can be changed only by users with admin level."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#53",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#54",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:headers": [
    {
    "@id": "#55",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:X-Amin-Resource": [
    {
    "@id": "#56",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#57",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#58",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#59",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#60",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:401": [
    {
    "@id": "#61",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#62",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#792",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "get"
    }
    ],
    "core:description": [
    {
    "@value": "List user messages. It returns an array of messages for last of 7 days if\n`since` property is not set.\nYou can use `since` and `until` query parameters to control messages time\nspan.\n"
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#793",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:parameter": [
    {
    "@id": "#794",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "until"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "until"
    }
    ],
    "core:description": [
    {
    "@value": "Date right limit of the messages query."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#795",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#date"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Date right limit of the messages query."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#796",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#797",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "2017-05-12"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#date"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "2017-05-12"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#796/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#796/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#796"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#794"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#799",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#801",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    },
    {
    "@id": "#802",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "since"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "since"
    }
    ],
    "core:description": [
    {
    "@value": "Date left limit of the messages query."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#803",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#date"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Date left limit of the messages query."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#804",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#805",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "2017-05-10"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#date"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "2017-05-10"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#804/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#804/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#804"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#802"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:payload": []
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#806",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#807",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#808",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#29/link--1892227567",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#29"
    }
    ],
    "doc:link-label": [
    {
    "@value": "items"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#809",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#810",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#811",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:from": [
    {
    "@id": "#812",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:uid": [
    {
    "@id": "#813",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "a7917e3c-4abf-11e7-a919-92ebcb67fe33"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#814",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:email": [
    {
    "@id": "#815",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#816",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This is an example message. Hello."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:timestamp": [
    {
    "@id": "#817",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1496757380"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:attachements": [
    {
    "@id": "#818",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#819",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_2"
    }
    ]
    },
    {
    "@id": "#820",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:from": [
    {
    "@id": "#821",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:uid": [
    {
    "@id": "#822",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "15e64d90-4ac0-11e7-a919-92ebcb67fe33"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#823",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "John Doe"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "data:email": [
    {
    "@id": "#824",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_12"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#825",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Howdy?"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "data:timestamp": [
    {
    "@id": "#826",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1496757498"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_1"
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#2"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/messages-example.json"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#809/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#809/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#809"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#807"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:security": [
    {
    "@id": "#790",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#791",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#827",
    "@type": [
    "apiContract:EndPoint",
    "doc:DomainElement"
    ],
    "apiContract:path": [
    {
    "@value": "/messages/bulk"
    }
    ],
    "apiContract:supportedOperation": [
    {
    "@id": "#828",
    "@type": [
    "apiContract:Operation",
    "doc:DomainElement"
    ],
    "apiContract:method": [
    {
    "@value": "post"
    }
    ],
    "core:description": [
    {
    "@value": "Bulk create messages."
    }
    ],
    "apiContract:expects": [
    {
    "@id": "#830",
    "@type": [
    "apiContract:Request",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:payload": [
    {
    "@id": "#831",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#832",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#290/link--171093665",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#290"
    }
    ],
    "doc:link-label": [
    {
    "@value": "items"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#833",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#834",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#835",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:email": [
    {
    "@id": "#836",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#837",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This is an example message. Hello."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:timestamp": [
    {
    "@id": "#838",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1496757380"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:attachements": [
    {
    "@id": "#839",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#840",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_2"
    }
    ]
    },
    {
    "@id": "#841",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:email": [
    {
    "@id": "#842",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#843",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Howdy?"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "data:timestamp": [
    {
    "@id": "#844",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1496757498"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:important": [
    {
    "@id": "#845",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_1"
    }
    ]
    }
    ],
    "doc:reference-id": [
    {
    "@id": "#10"
    }
    ],
    "doc:location": [
    {
    "@value": "file:///Users/fdigiandomenico/mulesoft/advanced-rest-client/api-security-documentation/demo/raml-example-api/examples/messages-sent-example.json"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#833/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#833/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#833"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#831"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "amf://id#323": {
    "core:extensionName": [
    {
    "@value": "annotationTest"
    }
    ],
    "@id": "#847",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    },
    "doc:customDomainProperties": [
    {
    "@id": "#323"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:returns": [
    {
    "@id": "#848",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "200"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#849",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "X-Amin-Resource"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "X-Amin-Resource"
    }
    ],
    "core:description": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#850",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:name": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "core:description": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#851",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "false"
    }
    ]
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "200"
    }
    ],
    "apiContract:payload": []
    },
    {
    "@id": "#852",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "apiContract:payload": []
    }
    ],
    "security:security": [
    {
    "@id": "#471",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#472",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#473",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#474",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:scheme": [
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#475",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#476",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:scheme": [
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#477",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#478",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:scheme": [
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#479",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#480",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:scheme": [
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#481",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#482",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:scheme": [
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#483",
    "@type": [
    "security:SecurityRequirement",
    "doc:DomainElement"
    ],
    "security:schemes": [
    {
    "@id": "#484",
    "@type": [
    "security:ParametrizedSecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:scheme": [
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:extends": [
    {
    "@id": "#829",
    "@type": [
    "apiContract:ParametrizedTrait",
    "doc:ParametrizedDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Adminable"
    }
    ],
    "doc:target": [
    {
    "@id": "#423",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Adminable"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#51",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#52",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Use this to mark a resource that can be changed only by users with admin level."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#53",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#54",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:headers": [
    {
    "@id": "#55",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:X-Amin-Resource": [
    {
    "@id": "#56",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#57",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#58",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#59",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#60",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:401": [
    {
    "@id": "#61",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#62",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": true
    }
    ],
    "doc:references": [
    {
    "@id": "#1",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#2",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "[\n  {\n    \"from\": {\n      \"uid\": \"a7917e3c-4abf-11e7-a919-92ebcb67fe33\",\n      \"name\": \"Pawel Psztyc\",\n      \"email\": \"bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com\"\n    },\n    \"message\": \"This is an example message. Hello.\",\n    \"timestamp\": 1496757380,\n    \"attachements\": [\n      \"https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33\"\n    ]\n  }, {\n    \"from\": {\n      \"uid\": \"15e64d90-4ac0-11e7-a919-92ebcb67fe33\",\n      \"name\": \"John Doe\",\n      \"email\": \"220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com\"\n    },\n    \"message\": \"Howdy?\",\n    \"timestamp\": 1496757498\n  }\n]\n"
    }
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#3",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#4",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#5",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#6",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"Product\">\n  <id>f2f7933a-a9ce-11e6-80f5-76304dec7eb7</id>\n  <name>Acme product - mentol flavor, 500 ml.</name>\n  <quantity>500</quantity>\n  <unit>ml</unit>\n  <upc>042100005264</upc>\n  <available>true</available>\n</resource>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#7",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#8",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"false\" type=\"AppPerson\">\n  <id>Qawer63J73HJ6khjswuqyq62382jG21s</id>\n  <name>John Smith</name>\n  <birthday>1990-10-12</birthday>\n  <gender>male</gender>\n  <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s</url>\n  <image>\n    <url>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image</url>\n    <thumb>https://www.domain.com/people/Qawer63J73HJ6khjswuqyq62382jG21s/image/thumb</thumb>\n  </image>\n  <tagline>Hi, I'm John!</tagline>\n  <language>en_US</language>\n</resource>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#9",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#10",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "[\n  {\n    \"email\": \"bea3d5e8-4abf-11e7-a919-92ebcb67fe33-em-vbc@domain.com\",\n    \"message\": \"This is an example message. Hello.\",\n    \"timestamp\": 1496757380,\n    \"attachements\": [\n      \"https://attc.domain.com/01332c24-4ac0-11e7-a919-92ebcb67fe33\"\n    ]\n  }, {\n    \"email\": \"220ce9bc-4abf-11e7-a919-92ebcb67fe33-oa-vbc@domain.com\",\n    \"message\": \"Howdy?\",\n    \"timestamp\": 1496757498,\n    \"important\": true\n  }\n]\n"
    }
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#11",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#12",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#23",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#24",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"quantity\" type=\"xs:double\"></xs:element>\n        <xs:element name=\"unit\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"upc\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"available\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:string\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#25",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#26",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#28",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#29",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#30",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#from"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#31",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#32",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#uid"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#33",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "uid"
    }
    ],
    "core:description": [
    {
    "@value": "User ID."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "uid"
    }
    ]
    },
    {
    "@id": "#34",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#35",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "User full name"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#36",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#email"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#37",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ],
    "core:description": [
    {
    "@value": "User emaill address to be used to return the message. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "from"
    }
    ],
    "core:description": [
    {
    "@value": "Object representing sender of the message."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "from"
    }
    ]
    },
    {
    "@id": "#38",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#39",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Message body"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    },
    {
    "@id": "#40",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#timestamp"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#41",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent timestamp as a Uxin timestamp."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ]
    },
    {
    "@id": "#42",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#attachements"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#43",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#44",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ],
    "core:description": [
    {
    "@value": "List of URLs to the attachments"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ]
    },
    {
    "@id": "#46",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#important"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#47",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ],
    "core:description": [
    {
    "@value": "True if the message should be marked as an important."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "An user message object."
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#49",
    "@type": [
    "apiContract:TraitFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#50",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "trait"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#51",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#52",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Use this to mark a resource that can be changed only by users with admin level."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#53",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#54",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:headers": [
    {
    "@id": "#55",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:X-Amin-Resource": [
    {
    "@id": "#56",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#57",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#58",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#59",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#60",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:401": [
    {
    "@id": "#61",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#62",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:usage": [
    {
    "@value": "Some resources can be changed only by users with Admin clerance level. This resources will be \nmarked with the header `X-Admin-Resource` when requesting it. It means that every attemp to \nupdate the resource by non-admin user will result with 401 response.\n"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#63",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#64",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#65",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#66",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#67",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#68",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#69",
    "@type": [
    "doc:Module",
    "doc:Unit"
    ],
    "doc:declares": [
    {
    "@id": "#70",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Admin"
    }
    ]
    },
    {
    "@id": "#87",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:anyOf": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#110",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#111",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AlertableAdmin"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Alertable"
    }
    ]
    },
    {
    "@id": "#114",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#115",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#onCall"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#87",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:anyOf": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#110",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#111",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AlertableAdmin"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Alertable"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "onCall"
    }
    ]
    },
    {
    "@id": "#116",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#Head"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#88",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#89",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#reports"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#90",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#73",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#97",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#98",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Person"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#91",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#92",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#93",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#94",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:title": [
    {
    "@id": "#95",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Mr."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#96",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Manager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "firstname: Pawel\nlastname: Psztyc\ntitle: Mr.\nkind: Manager"
    }
    ]
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    },
    {
    "@id": "#100",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#104",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#105",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#105/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#106",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeManager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Manager"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "Head"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Org"
    }
    ],
    "core:description": [
    {
    "@value": "Represents an organization unit."
    }
    ]
    },
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    },
    {
    "@id": "#73",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#97",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#98",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Person"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#91",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#92",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#93",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#94",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:title": [
    {
    "@id": "#95",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Mr."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#96",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Manager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "firstname: Pawel\nlastname: Psztyc\ntitle: Mr.\nkind: Manager"
    }
    ]
    }
    ]
    },
    {
    "@id": "#88",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#89",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#reports"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#90",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#73",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#97",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#98",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Person"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#91",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#92",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#93",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#94",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:title": [
    {
    "@id": "#95",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Mr."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#96",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Manager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "firstname: Pawel\nlastname: Psztyc\ntitle: Mr.\nkind: Manager"
    }
    ]
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    },
    {
    "@id": "#100",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#104",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#105",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#105/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#106",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeManager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#110",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#111",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AlertableAdmin"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#118",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#119",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#120",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#121",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#122",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#123",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#138",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#139",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "type"
    }
    ],
    "core:description": [
    {
    "@value": "Common properties for all resources returned by the API.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#143",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#144",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#161",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#162",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#176",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#tagline"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#177",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ],
    "core:description": [
    {
    "@value": "The brief description (tagline) of this person."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ]
    },
    {
    "@id": "#178",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#179",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z ]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Person full name. The input will be rejected if this property is not set while creating new object."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#180",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#181",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "John Smith"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "John Smith"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#182",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#183",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of this person's profile."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#184",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#language"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#185",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ],
    "core:description": [
    {
    "@value": "The user's preferred language for rendering."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ]
    },
    {
    "@id": "#186",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#187",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#188",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#birthday"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#189",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ],
    "core:description": [
    {
    "@value": "The person's date of birth, represented as YYYY-MM-DD."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ]
    },
    {
    "@id": "#190",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#image"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#12",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ]
    },
    {
    "@id": "#191",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#gender"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#192",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "gender?"
    }
    ],
    "core:description": [
    {
    "@value": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "gender"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "type"
    }
    ],
    "core:name": [
    {
    "@value": "A person resource"
    }
    ],
    "core:description": [
    {
    "@value": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#163",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#164",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#165",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "R34fg663H9KW9MMSKISI"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#166",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:birthday": [
    {
    "@id": "#167",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1983-10-20"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:gender": [
    {
    "@id": "#168",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "male"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:url": [
    {
    "@id": "#169",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:image": [
    {
    "@id": "#170",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#171",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#172",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:tagline": [
    {
    "@id": "#173",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Some text about me."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "data:language": [
    {
    "@id": "#174",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "en_GB"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#175",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W\\244m4n5kj3gbn2nj4k4n4"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: \"R34fg663H9KW9MMSKISI\"\nname: \"Pawel Psztyc\"\nbirthday: \"1983-10-20\"\ngender: male\nurl: \"https://domain.com/profile/pawel.psztyc\"\nimage:\n  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\ntagline: Some text about me.\nlanguage: en_GB\netag: \"W\\\\244m4n5kj3gbn2nj4k4n4\""
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:references": [
    {
    "@id": "#11",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#12",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#138",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#139",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "type"
    }
    ],
    "core:description": [
    {
    "@value": "Common properties for all resources returned by the API.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#194",
    "@type": [
    "apiContract:TraitFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#195",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "trait"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#196",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#197",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The collection of <<resourcePathName>>."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:queryParameters": [
    {
    "@id": "#198",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:limit": [
    {
    "@id": "#199",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#200",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#201",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:maximum": [
    {
    "@id": "#202",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "300"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#203",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#204",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#205",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:start": [
    {
    "@id": "#206",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#207",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#208",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#209",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#210",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#211",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#212",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#213",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_18"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#214",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_19"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#215",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_20"
    }
    ]
    }
    ],
    "data:pattern": [
    {
    "@id": "#216",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "[a-zA-Z0-9]+"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_21"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#217",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#218",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#219",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_24"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#220",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#221",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#222",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_27"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#223",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:items": [
    {
    "@id": "#224",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#225",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "array"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_30"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#226",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_31"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#227",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_32"
    }
    ]
    }
    ],
    "data:items": [
    {
    "@id": "#228",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<resourceType>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_33"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_29"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#229",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#230",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_35"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#231",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_36"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#232",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_37"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#233",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_38"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_34"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_28"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_26"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_25"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_23"
    }
    ]
    }
    ],
    "data:400": [
    {
    "@id": "#234",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#235",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_40"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#236",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#237",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#238",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_43"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#239",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_44"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#240",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:error": [
    {
    "@id": "#241",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#242",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_47"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#243",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_48"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#244",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_49"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#245",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_50"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_46"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#246",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#247",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_52"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#248",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_53"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#249",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_54"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#250",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_55"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_51"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_45"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_42"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_41"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_39"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_22"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@value": "resourceType"
    },
    {
    "@value": "resourcePathName"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:usage": [
    {
    "@value": "This trait is to be used when the resource is paginated that is the edpoint producses\na list of resources in the response.\nEvery paginated response contains a `nextPageToken` property that should be used in pagination\nto request for next page of the results and `items` which is a list of resources.\n\nThe `items` property is always defined, even if the response is empty. Therefore the `404`\nresponse in this case is not possible. Clients need to handle empty responses by their own.\n\nIt is crutial that the subsequent requests contain the same set of parameters (like `limit`\nor `start`) because if this values will change then the `nextPageToken` will be revalidated\nand pagination will start from the first page.\n"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#251",
    "@type": [
    "apiContract:UserDocumentationFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#252",
    "@type": [
    "core:CreativeWork",
    "doc:DomainElement"
    ],
    "core:title": [
    {
    "@value": "About"
    }
    ],
    "core:description": [
    {
    "@value": "# About the example API\n\nThe `Example API` provides all definitions of the RAML 1.0 like types, security schemes, resource types and so on.\nMagic variables are special strings that are passed to any string property in the request and it will be replaced with other string that is defined for\nthis variable.\n\n## Example\nLet's say you want to generate a random number in the request. So the property\nvalue like:\n```\nhttp://www.domain.com/?time=${now}\n```\ncan produce:\n```\nhttp://www.domain.com/?time=12312312312\n```\n\n## Build-in magic variables.\n| Variable | Description | Example |\n| --- | --- | --- |\n| `${random}` | Will generate random number in range from 0 to Number.MAX_SAFE_INTEGER | 9007199254740991 |\n| `${random:NUMBER}` | A variation of `${random}` where the result will be remembered and can be used in other property. If the same `NUMBER` occurs again then previously generated value will be used. | 7199254740 |\n| `${now}` | Inserts current epoch time | 12312312312 |\n\n## Magic variables scopes\nThere are two types of magic variables:\n* **global** - Applied to every request,\n* **scoped** - Applied to a request enclosed in a project.\n\n### Global variables\nVariables of this type will be applied to every outgoing request.\n\n### Scoped variables.\nScoped variables are associated with a project and are applied to those request\nthat are added to corresponding project.\n\n## User magic variables\nThis element supports user defined variables. Variables defined by the user are kept\nin IndexedDB locally and retreived\nby the element on run time. Users can decide either the variable is global or scoped.\n\n## Database structure\n| Property | Type | Is key | Description |\n| --- | --- | --- | --- |\n| id | Number | Yes, key path | An autoincremental key for the rule |\n| variable | String | Yes | A variable name. It must be consisted with [0-9A-Za-z${}_-] |\n| value | String | No | Replacement value. Replacement value may include other magic variables |\n| type | String | Yes | Either `global` or `scoped` (for now) |\n| project | Number | Yes | Relevant if the `type` is set to `scoped`. The rule will be applied to the requests that are associated with this project. If not set if will be omnited. |\n\n## Usage\nThe element's `value` property contains a value that will be parsed during the work.\nIt may be either String or Object.\n\nWhile String is obvious, the Object will be treated differently. It will parse only\nstring values of each first level key.\nThis means that no deep objects will be taken into consideration.\nBefore start applying new magic variables the program should call `clear()`\nfunction to clear the groups defined by previous use.\nThe element will keep groups generated data so it can be uses many times on\ndifferent strings resulting with the same group values.\n\nJavaScript code:\n```javascript\n...\nthis.$.mv.clear();\nthis.set('headersList', headers);\nthis.$.mv.parse();\n...\n_onParsed = (e) => {\n  var headers = e.detail.result;\n};\n...\n```\nThe parse method returns a Promise which will be fulfilled when it finish parsing data:\n```javascript\n...\nthis.set('headersList', headers);\nthis.$.mv.parse()\n.then((result) => {\n  // parsed data\n});\n...\n```\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#254",
    "@type": [
    "doc:ExternalFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#255",
    "@type": [
    "doc:ExternalDomainElement",
    "doc:DomainElement"
    ],
    "doc:raw": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"id\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"name\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"birthday\" type=\"xs:date\"></xs:element>\n        <xs:element name=\"gender\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"image\">\n          <xs:complexType>\n            <xs:sequence>\n              <xs:element name=\"url\" type=\"xs:string\"></xs:element>\n              <xs:element name=\"thumb\" type=\"xs:string\"></xs:element>\n            </xs:sequence>\n          </xs:complexType>\n        </xs:element>\n        <xs:element name=\"tagline\" type=\"xs:string\"></xs:element>\n        <xs:element name=\"language\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"></xs:attribute>\n      <xs:attribute name=\"type\" type=\"xs:string\" use=\"required\"></xs:attribute>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#256",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#257",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#267",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#upc"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#268",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9]{12,12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ],
    "core:description": [
    {
    "@value": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#269",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#270",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "042100005264"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "042100005264"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ]
    },
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#271",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#272",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Product name"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#273",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#274",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#275",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#276",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#277",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#unit"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#278",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ],
    "core:description": [
    {
    "@value": "The unit of measuremet for the quantity property."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#279",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#280",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ml"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ]
    },
    {
    "@id": "#281",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#available"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#282",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ],
    "core:description": [
    {
    "@value": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#283",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#284",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ]
    },
    {
    "@id": "#285",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#quantity"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#286",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ],
    "core:description": [
    {
    "@value": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#287",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#288",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "500"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "500"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "type"
    }
    ],
    "core:name": [
    {
    "@value": "A product resource"
    }
    ],
    "core:description": [
    {
    "@value": "A single product representing an item in the store."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#258",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "example_0"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#259",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#260",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#261",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme Product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:quantity": [
    {
    "@id": "#262",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "200"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:unit": [
    {
    "@id": "#263",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:upc": [
    {
    "@id": "#264",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123456789101"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:available": [
    {
    "@id": "#265",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#266",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W\\d3deef3rgrgf4r"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: we2322-4f4f4f-f4f4ff-f4f4ff4\nname: Acme Product\nquantity: 200\nunit: ml\nupc: \"123456789101\"\navailable: true\netag: \"W\\\\d3deef3rgrgf4r\""
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:references": [
    {
    "@id": "#138",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#139",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "type"
    }
    ],
    "core:description": [
    {
    "@value": "Common properties for all resources returned by the API.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#289",
    "@type": [
    "raml-shapes:DataTypeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#290",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#291",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#email"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#292",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ],
    "core:description": [
    {
    "@value": "Receiver email address. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ]
    },
    {
    "@id": "#293",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#294",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Message body"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    },
    {
    "@id": "#295",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#timestamp"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#296",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent timestamp as a Uxin timestamp."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ]
    },
    {
    "@id": "#297",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#attachements"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#298",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#299",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ],
    "core:description": [
    {
    "@value": "List of URLs to the attachments"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ]
    },
    {
    "@id": "#301",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#important"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#302",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ],
    "core:description": [
    {
    "@value": "True if the message should be marked as an important."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent by a user object. This represents a message in user's sent folder.\n"
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#304",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#305",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    },
    {
    "@id": "#310",
    "@type": [
    "security:SecuritySchemeFragment",
    "doc:Fragment",
    "doc:Unit"
    ],
    "doc:encodes": [
    {
    "@id": "#311",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "doc:version": [
    {
    "@value": "2.0.0"
    }
    ],
    "doc:root": [
    {
    "@value": false
    }
    ]
    }
    ],
    "doc:declares": [
    {
    "@id": "#323",
    "@type": [
    "doc:DomainProperty",
    "rdf:Property",
    "doc:DomainElement"
    ],
    "raml-shapes:schema": [
    {
    "@id": "#324",
    "@type": [
    "raml-shapes:NilShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "annotationTest"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "annotationTest"
    }
    ]
    },
    {
    "@id": "#325",
    "@type": [
    "doc:DomainProperty",
    "rdf:Property",
    "doc:DomainElement"
    ],
    "raml-shapes:schema": [
    {
    "@id": "#326",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "deprecated"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "deprecated"
    }
    ]
    },
    {
    "@id": "#327",
    "@type": [
    "doc:DomainProperty",
    "rdf:Property",
    "doc:DomainElement"
    ],
    "raml-shapes:schema": [
    {
    "@id": "#328",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#329",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#level"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#330",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "level"
    }
    ],
    "shacl:in": [
    {
    "@id": "#330/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#331",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#332",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "medium"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#333",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "level"
    }
    ]
    },
    {
    "@id": "#334",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#signature"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#335",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^\\d{3}-\\w{12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "signature"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "signature"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#336",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#339",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#340",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#341",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#342",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#343",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#344",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#345",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#346",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#347",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<example>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "<<example>>"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "ErrorResource"
    }
    ],
    "core:description": [
    {
    "@value": "A response that is errored"
    }
    ]
    },
    {
    "@id": "#352",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#176",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#tagline"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#177",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ],
    "core:description": [
    {
    "@value": "The brief description (tagline) of this person."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "tagline"
    }
    ]
    },
    {
    "@id": "#178",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#179",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z ]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Person full name. The input will be rejected if this property is not set while creating new object."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#180",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#181",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "John Smith"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "John Smith"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#182",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#183",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of this person's profile."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#184",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#language"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#185",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ],
    "core:description": [
    {
    "@value": "The user's preferred language for rendering."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "language"
    }
    ]
    },
    {
    "@id": "#186",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#187",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "A unique identifier for a person. It is a 32 bit string containing alphanumeric characters."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#188",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#birthday"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#189",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ],
    "core:description": [
    {
    "@value": "The person's date of birth, represented as YYYY-MM-DD."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "birthday"
    }
    ]
    },
    {
    "@id": "#190",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#image"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#12",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ]
    },
    {
    "@id": "#191",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#gender"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#192",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "gender?"
    }
    ],
    "core:description": [
    {
    "@value": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "gender"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AppPerson"
    }
    ],
    "core:name": [
    {
    "@value": "A person resource"
    }
    ],
    "core:description": [
    {
    "@value": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#163",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#164",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#165",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "R34fg663H9KW9MMSKISI"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#166",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:birthday": [
    {
    "@id": "#167",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1983-10-20"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:gender": [
    {
    "@id": "#168",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "male"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:url": [
    {
    "@id": "#169",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:image": [
    {
    "@id": "#170",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#171",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#172",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:tagline": [
    {
    "@id": "#173",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Some text about me."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "data:language": [
    {
    "@id": "#174",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "en_GB"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#175",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W\\244m4n5kj3gbn2nj4k4n4"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: \"R34fg663H9KW9MMSKISI\"\nname: \"Pawel Psztyc\"\nbirthday: \"1983-10-20\"\ngender: male\nurl: \"https://domain.com/profile/pawel.psztyc\"\nimage:\n  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\ntagline: Some text about me.\nlanguage: en_GB\netag: \"W\\\\244m4n5kj3gbn2nj4k4n4\""
    }
    ]
    }
    ]
    },
    {
    "@id": "#354",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Resource"
    }
    ],
    "core:description": [
    {
    "@value": "Common properties for all resources returned by the API.\n"
    }
    ]
    },
    {
    "@id": "#355",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#267",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#upc"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#268",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9]{12,12}$"
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ],
    "core:description": [
    {
    "@value": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#269",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#270",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "042100005264"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "042100005264"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "upc"
    }
    ]
    },
    {
    "@id": "#140",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#etag"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#141",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ],
    "core:description": [
    {
    "@value": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "etag"
    }
    ]
    },
    {
    "@id": "#271",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#272",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "Product name"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#273",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#274",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "Acme product - mentol flavor, 500 ml."
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#275",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#id"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#276",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9a-zA-Z-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ],
    "core:description": [
    {
    "@value": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "id"
    }
    ]
    },
    {
    "@id": "#277",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#unit"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#278",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ],
    "core:description": [
    {
    "@value": "The unit of measuremet for the quantity property."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#279",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#280",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ml"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "unit"
    }
    ]
    },
    {
    "@id": "#281",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#available"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#282",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ],
    "core:description": [
    {
    "@value": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#283",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#284",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "available"
    }
    ]
    },
    {
    "@id": "#285",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#quantity"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#286",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ],
    "core:description": [
    {
    "@value": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#287",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#288",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "500"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "500"
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "quantity"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Product"
    }
    ],
    "core:name": [
    {
    "@value": "A product resource"
    }
    ],
    "core:description": [
    {
    "@value": "A single product representing an item in the store."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#258",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "example_0"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#259",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#260",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#261",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Acme Product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:quantity": [
    {
    "@id": "#262",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "200"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:unit": [
    {
    "@id": "#263",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:upc": [
    {
    "@id": "#264",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123456789101"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:available": [
    {
    "@id": "#265",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#266",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W\\d3deef3rgrgf4r"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: we2322-4f4f4f-f4f4ff-f4f4ff4\nname: Acme Product\nquantity: 200\nunit: ml\nupc: \"123456789101\"\navailable: true\netag: \"W\\\\d3deef3rgrgf4r\""
    }
    ]
    },
    {
    "@id": "#356",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "example_1"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#357",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:id": [
    {
    "@id": "#358",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "d697f5cea85011e680f576304dec7eb7"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:name": [
    {
    "@id": "#359",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Super product"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:quantity": [
    {
    "@id": "#360",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "125"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:unit": [
    {
    "@id": "#361",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ml"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:upc": [
    {
    "@id": "#362",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123456789101"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:available": [
    {
    "@id": "#363",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:etag": [
    {
    "@id": "#364",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "W/\"686897696a7c876b7e\""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "id: d697f5cea85011e680f576304dec7eb7\nname: Super product\nquantity: 125\nunit: ml\nupc: \"123456789101\"\navailable: true\netag: \"W/\\\"686897696a7c876b7e\\\"\""
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#356/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#356/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#356"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#365"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#367",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    },
    {
    "@id": "#368",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "Feature"
    }
    ],
    "core:description": [
    {
    "@value": "A feature to test enum values in the URI parameters."
    }
    ],
    "shacl:in": [
    {
    "@id": "#368/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#369",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "A"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#370",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "B"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#371",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "C"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#373",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#374",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:get": [
    {
    "@id": "#375",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": ""
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#nil"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    },
    {
    "@id": "#378",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "ResourceNotFound"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#379",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#380",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:get": [
    {
    "@id": "#381",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:responses": [
    {
    "@id": "#382",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:404": [
    {
    "@id": "#383",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:body": [
    {
    "@id": "#384",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#385",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#386",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#387",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:application%2Fxml": [
    {
    "@id": "#388",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#389",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Not found response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#390",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#391",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    },
    {
    "@id": "#394",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "UnauthorizedResponse"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#395",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#396",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:get": [
    {
    "@id": "#397",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:responses": [
    {
    "@id": "#398",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:404": [
    {
    "@id": "#399",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:body": [
    {
    "@id": "#400",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#401",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#402",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Unauthorized response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#403",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "data:application%2Fxml": [
    {
    "@id": "#404",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#405",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Unauthorized response"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_11"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#406",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#407",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    },
    {
    "@id": "#408",
    "@type": [
    "apiContract:ResourceType",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "RequestErrorResponse"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#409",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#410",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorredResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:get": [
    {
    "@id": "#411",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:responses": [
    {
    "@id": "#412",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:400": [
    {
    "@id": "#413",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#414",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#415",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#416",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#417",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid request"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#418",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ErrorResource"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_8"
    }
    ]
    }
    ],
    "data:application%2Fxml": [
    {
    "@id": "#419",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#420",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid request"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#421",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#422",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_7"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    },
    {
    "@id": "#13",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Paginated"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#196",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#197",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The collection of <<resourcePathName>>."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:queryParameters": [
    {
    "@id": "#198",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:limit": [
    {
    "@id": "#199",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#200",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#201",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Limit in the response list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_6"
    }
    ]
    }
    ],
    "data:maximum": [
    {
    "@id": "#202",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "300"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#203",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#204",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "100"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#205",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:start": [
    {
    "@id": "#206",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#207",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "number"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#208",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The start entry of the list"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_13"
    }
    ]
    }
    ],
    "data:minimum": [
    {
    "@id": "#209",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_14"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#210",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "25"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_15"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#211",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "0"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_16"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#212",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#213",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_18"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#214",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_19"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#215",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `nextPageToken` is a web safe encoded cursor to the next entry in the database.\nIt can be obtained by requesting paginated resource and used in next request to get\nnext results page.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_20"
    }
    ]
    }
    ],
    "data:pattern": [
    {
    "@id": "#216",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "[a-zA-Z0-9]+"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_21"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_17"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#217",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#218",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#219",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Paginated response containing a single page of the result.\nBy default one page of the results contains 25 items. You can extend it by setting a\n`limit` query parameter in your request.\nWhen changing parameters while using the `nextPageToken` the `nextPageToken` will be ignored\nand new query will be performed. Queries with `nextPageToken` should contain the same set\nof parameters as the first request.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_24"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#220",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#221",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#222",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_27"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#223",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:items": [
    {
    "@id": "#224",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#225",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "array"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_30"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#226",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_31"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#227",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Contains a list of objects for this method."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_32"
    }
    ]
    }
    ],
    "data:items": [
    {
    "@id": "#228",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "<<resourceType>>"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_33"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_29"
    }
    ]
    }
    ],
    "data:nextPageToken": [
    {
    "@id": "#229",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#230",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_35"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#231",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_36"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#232",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "CiAKGjBpNDd2Nmp2Zml2cXRwYjBpOXA"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_37"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#233",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The next page token is a web safe encoded cursor to the next entry in the database.\nUse it in the next request to obtain next page of the results.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_38"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_34"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_28"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_26"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_25"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_23"
    }
    ]
    }
    ],
    "data:400": [
    {
    "@id": "#234",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#235",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error response when one of the parameters is invalid and can't be parsed.\nNothing can be done at this time except correcting the request to send valid data.\n"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_40"
    }
    ]
    }
    ],
    "data:body": [
    {
    "@id": "#236",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:application%2Fjson": [
    {
    "@id": "#237",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#238",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Invalid"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_43"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#239",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "object"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_44"
    }
    ]
    }
    ],
    "data:properties": [
    {
    "@id": "#240",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:error": [
    {
    "@id": "#241",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#242",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_47"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#243",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_48"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#244",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_49"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#245",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Indicate that the response is errored."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_50"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_46"
    }
    ]
    }
    ],
    "data:message": [
    {
    "@id": "#246",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:type": [
    {
    "@id": "#247",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "string"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_52"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#248",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The error message associated with the error."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_53"
    }
    ]
    }
    ],
    "data:example": [
    {
    "@id": "#249",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The `limit` parameter is invalid. Please, provide a number between 1 and 300."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_54"
    }
    ]
    }
    ],
    "data:required": [
    {
    "@id": "#250",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_55"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_51"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_45"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_42"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_41"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_39"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_22"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:variable": [
    {
    "@value": "resourceType"
    },
    {
    "@value": "resourcePathName"
    }
    ]
    },
    {
    "@id": "#423",
    "@type": [
    "apiContract:Trait",
    "doc:AbstractDeclaration",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Adminable"
    }
    ],
    "doc:dataNode": [
    {
    "@id": "#51",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#52",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Use this to mark a resource that can be changed only by users with admin level."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:responses": [
    {
    "@id": "#53",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:200": [
    {
    "@id": "#54",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:headers": [
    {
    "@id": "#55",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:X-Amin-Resource": [
    {
    "@id": "#56",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:displayName": [
    {
    "@id": "#57",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Admin resource mark header"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_7"
    }
    ]
    }
    ],
    "data:type": [
    {
    "@id": "#58",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "boolean"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_8"
    }
    ]
    }
    ],
    "data:default": [
    {
    "@id": "#59",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "false"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_9"
    }
    ]
    }
    ],
    "data:description": [
    {
    "@id": "#60",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "This header is not set if the resource can be changed by non-admin users."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_10"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_6"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_4"
    }
    ]
    }
    ],
    "data:401": [
    {
    "@id": "#61",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:description": [
    {
    "@id": "#62",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "The 401 response will be returned when trying to update the resource with \nnon-admin clerance level. Resources that requires admin privileges are marked with \n`X-Admin-Resource` header when getting the resource."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_12"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_11"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ]
    },
    {
    "@id": "#424",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-custom"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "A custom security scheme for authenticating requests.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#124",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "SpecialToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "SpecialToken"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#125",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a custom token.\n"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#126",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "debugToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "debugToken"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#127",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Select one of available values to run the request in the debug mode with selected level."
    }
    ],
    "shacl:in": [
    {
    "@id": "#127/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#128",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Info"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#129",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Log"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "rdfs:_3": [
    {
    "@id": "#130",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Warning"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "rdfs:_4": [
    {
    "@id": "#131",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Error"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "rdfs:_5": [
    {
    "@id": "#132",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Critical"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#133",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "booleanToken"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "booleanToken"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#134",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Just to test boolean values."
    }
    ],
    "shacl:defaultValue": [
    {
    "@id": "#135",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "true"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "shacl:defaultValueStr": [
    {
    "@value": "true"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#136",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token.\n"
    }
    ]
    },
    {
    "@id": "#137",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ]
    }
    ]
    },
    {
    "@id": "#425",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "x-other"
    }
    ],
    "security:type": [
    {
    "@value": "x-custom"
    }
    ],
    "core:description": [
    {
    "@value": "Other custom security method for authorization.\n"
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#312",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiUserId"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiUserId"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#313",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://a.ml/vocabularies/shapes#number"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Your api user ID. Some imaginary value.\n"
    }
    ]
    }
    ]
    },
    {
    "@id": "#314",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "apiNonce"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "apiNonce"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#315",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Random string"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#316",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad token autorization.\n"
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#317",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#318",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#319",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#error"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#320",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ],
    "core:description": [
    {
    "@value": "Always true. Indicates that the response is errord."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "error"
    }
    ]
    },
    {
    "@id": "#321",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#322",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Human readable message describing the error."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#426",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "digest"
    }
    ],
    "security:type": [
    {
    "@value": "Digest Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    }
    ]
    },
    {
    "@id": "#427",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "pass_through"
    }
    ],
    "security:type": [
    {
    "@value": "Pass Through"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Pass Through Authentication for staging environment.\n"
    }
    ],
    "apiContract:header": [
    {
    "@id": "#306",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api_key_pass_through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#307",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#308",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "api-key-pass-through"
    }
    ],
    "apiContract:required": [
    {
    "@value": true
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#309",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#428",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_2_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 2.0"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports OAuth 2.0 for authenticating all API requests."
    }
    ],
    "apiContract:header": [
    {
    "@id": "#145",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "authorization"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "authorization"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "header"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#146",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter."
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#147",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#148",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "ya.2453vfDb3cJHisdf.*&H"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#147/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#147/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#147"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#145"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "apiContract:parameter": [
    {
    "@id": "#149",
    "@type": [
    "apiContract:Parameter",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "access_token"
    }
    ],
    "apiContract:paramName": [
    {
    "@value": "access_token"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ],
    "apiContract:required": [
    {
    "@value": false
    }
    ],
    "apiContract:binding": [
    {
    "@value": "query"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#150",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ],
    "core:description": [
    {
    "@value": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header."
    }
    ]
    }
    ]
    }
    ],
    "apiContract:response": [
    {
    "@id": "#151",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "401"
    }
    ],
    "core:name": [
    {
    "@value": "401"
    }
    ],
    "core:description": [
    {
    "@value": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#152",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#153",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#154",
    "@type": [
    "apiContract:Response",
    "apiContract:Message",
    "doc:DomainElement"
    ],
    "apiContract:statusCode": [
    {
    "@value": "403"
    }
    ],
    "core:name": [
    {
    "@value": "403"
    }
    ],
    "core:description": [
    {
    "@value": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here."
    }
    ],
    "apiContract:payload": [
    {
    "@id": "#155",
    "@type": [
    "apiContract:Payload",
    "doc:DomainElement"
    ],
    "core:mediaType": [
    {
    "@value": "application/json"
    }
    ],
    "raml-shapes:schema": [
    {
    "@id": "#156",
    "@type": [
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:name": [
    {
    "@value": "schema"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "security:settings": [
    {
    "@id": "#157",
    "@type": [
    "security:OAuth2Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:authorizationGrant": [
    {
    "@value": "authorization_code"
    },
    {
    "@value": "implicit"
    }
    ],
    "security:flows": [
    {
    "@id": "#158",
    "@type": [
    "security:OAuth2Flow",
    "doc:DomainElement"
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth2/auth"
    }
    ],
    "security:accessTokenUri": [
    {
    "@value": "http://api.domain.com/oauth2/token"
    }
    ],
    "security:scope": [
    {
    "@id": "#159",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "profile"
    }
    ]
    },
    {
    "@id": "#160",
    "@type": [
    "security:Scope",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "email"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#429",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "basic"
    }
    ],
    "security:type": [
    {
    "@value": "Basic Authentication"
    }
    ],
    "core:description": [
    {
    "@value": "This API supports Basic Authentication for staging environment.\n"
    }
    ]
    },
    {
    "@id": "#430",
    "@type": [
    "security:SecurityScheme",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "oauth_1_0"
    }
    ],
    "security:type": [
    {
    "@value": "OAuth 1.0"
    }
    ],
    "core:description": [
    {
    "@value": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
    ],
    "security:settings": [
    {
    "@id": "#27",
    "@type": [
    "security:OAuth1Settings",
    "security:Settings",
    "doc:DomainElement"
    ],
    "security:requestTokenUri": [
    {
    "@value": "http://api.domain.com/oauth1/request_token"
    }
    ],
    "security:authorizationUri": [
    {
    "@value": "http://api.domain.com/oauth1/authorize"
    }
    ],
    "security:tokenCredentialsUri": [
    {
    "@value": "http://api.domain.com/oauth1/access_token"
    }
    ]
    }
    ]
    },
    {
    "@id": "#448",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#457",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "inline-type"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#449",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Some-test-example"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#450",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#451",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "123"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    },
    {
    "@id": "#452",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "456"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "- 123\n- 456"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#449/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#449/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#449"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#447"
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#453",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "core:name": [
    {
    "@value": "Other-example"
    }
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#454",
    "@type": [
    "data:Array",
    "rdf:Seq",
    "data:Node",
    "doc:DomainElement"
    ],
    "rdfs:member": [
    {
    "@id": "#455",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1011"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    },
    {
    "@id": "#456",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "1213"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "array_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "- 1011\n- 1213"
    }
    ],
    "sourcemaps:sources": [
    {
    "@id": "#453/source-map",
    "@type": [
    "sourcemaps:SourceMap"
    ],
    "sourcemaps:tracked-element": [
    {
    "@id": "#453/source-map/tracked-element/element_0",
    "sourcemaps:element": [
    {
    "@value": "amf://id#453"
    }
    ],
    "sourcemaps:value": [
    {
    "@value": "amf://id#447"
    }
    ]
    }
    ]
    }
    ]
    }
    ]
    },
    {
    "@id": "#12",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#18",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#url"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#19",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ],
    "core:description": [
    {
    "@value": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "url"
    }
    ]
    },
    {
    "@id": "#20",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#thumb"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#21",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ],
    "core:name": [
    {
    "@value": "Thumbnail"
    }
    ],
    "core:description": [
    {
    "@value": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "thumb"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "image"
    }
    ],
    "core:description": [
    {
    "@value": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#14",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#15",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:url": [
    {
    "@id": "#16",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:thumb": [
    {
    "@id": "#17",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "url: https://domain.com/profile/pawel.psztyc/image\nthumb: https://domain.com/profile/pawel.psztyc/image/thumb"
    }
    ]
    }
    ]
    },
    {
    "@id": "#88",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#89",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#reports"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#90",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#73",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#97",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#98",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Person"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#91",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#92",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#93",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#94",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:title": [
    {
    "@id": "#95",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Mr."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#96",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Manager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "firstname: Pawel\nlastname: Psztyc\ntitle: Mr.\nkind: Manager"
    }
    ]
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    },
    {
    "@id": "#100",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#104",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#105",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#105/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#106",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeManager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#87",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:anyOf": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#110",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#111",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AlertableAdmin"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Alertable"
    }
    ]
    },
    {
    "@id": "#114",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#115",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#onCall"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#87",
    "@type": [
    "raml-shapes:UnionShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:anyOf": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    },
    {
    "@id": "#110",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#78",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#clearanceLevel"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#79",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ],
    "shacl:in": [
    {
    "@id": "#79/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#80",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "low"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ],
    "rdfs:_2": [
    {
    "@id": "#81",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "high"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "clearanceLevel"
    }
    ]
    },
    {
    "@id": "#111",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#82",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#83",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#83/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#84",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeAdmin"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "AlertableAdmin"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Alertable"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "onCall"
    }
    ]
    },
    {
    "@id": "#116",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#Head"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#88",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#89",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#reports"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#90",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#73",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#74",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#firstname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#75",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "firstname"
    }
    ]
    },
    {
    "@id": "#71",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#lastname"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#72",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "lastname"
    }
    ]
    },
    {
    "@id": "#76",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#title"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#77",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "title?"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "title"
    }
    ]
    },
    {
    "@id": "#97",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#98",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Person"
    }
    ],
    "apiContract:examples": [
    {
    "@id": "#91",
    "@type": [
    "apiContract:Example",
    "doc:DomainElement"
    ],
    "doc:strict": [
    {
    "@value": true
    }
    ],
    "doc:structuredValue": [
    {
    "@id": "#92",
    "@type": [
    "data:Object",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:firstname": [
    {
    "@id": "#93",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Pawel"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_2"
    }
    ]
    }
    ],
    "data:lastname": [
    {
    "@id": "#94",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Psztyc"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_3"
    }
    ]
    }
    ],
    "data:title": [
    {
    "@id": "#95",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Mr."
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_4"
    }
    ]
    }
    ],
    "data:kind": [
    {
    "@id": "#96",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "Manager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_5"
    }
    ]
    }
    ],
    "core:name": [
    {
    "@value": "object_1"
    }
    ]
    }
    ],
    "doc:raw": [
    {
    "@value": "firstname: Pawel\nlastname: Psztyc\ntitle: Mr.\nkind: Manager"
    }
    ]
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "reports"
    }
    ]
    },
    {
    "@id": "#100",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#phone"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#101",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:pattern": [
    {
    "@value": "^[0-9|-]+$"
    }
    ],
    "shacl:name": [
    {
    "@value": "Phone"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "phone"
    }
    ]
    },
    {
    "@id": "#104",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#kind"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#105",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ],
    "shacl:in": [
    {
    "@id": "#105/list",
    "@type": "rdfs:Seq",
    "rdfs:_1": [
    {
    "@id": "#106",
    "@type": [
    "data:Scalar",
    "data:Node",
    "doc:DomainElement"
    ],
    "data:value": [
    {
    "@value": "AcmeManager"
    }
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "core:name": [
    {
    "@value": "scalar_1"
    }
    ]
    }
    ]
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "kind"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Manager"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "Head"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "Org"
    }
    ],
    "core:description": [
    {
    "@value": "Represents an organization unit."
    }
    ]
    },
    {
    "@id": "#769",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#88/link--978468155",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "doc:link-target": [
    {
    "@id": "#88"
    }
    ],
    "doc:link-label": [
    {
    "@value": "Manager"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "inline-type"
    }
    ]
    },
    {
    "@id": "#29",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#30",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#from"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#31",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#32",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#uid"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#33",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "uid"
    }
    ],
    "core:description": [
    {
    "@value": "User ID."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "uid"
    }
    ]
    },
    {
    "@id": "#34",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#name"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#35",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ],
    "core:description": [
    {
    "@value": "User full name"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "name"
    }
    ]
    },
    {
    "@id": "#36",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#email"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#37",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ],
    "core:description": [
    {
    "@value": "User emaill address to be used to return the message. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "from"
    }
    ],
    "core:description": [
    {
    "@value": "Object representing sender of the message."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "from"
    }
    ]
    },
    {
    "@id": "#38",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#39",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Message body"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    },
    {
    "@id": "#40",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#timestamp"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#41",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent timestamp as a Uxin timestamp."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ]
    },
    {
    "@id": "#42",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#attachements"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#43",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#44",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ],
    "core:description": [
    {
    "@value": "List of URLs to the attachments"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ]
    },
    {
    "@id": "#46",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#important"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#47",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ],
    "core:description": [
    {
    "@value": "True if the message should be marked as an important."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "An user message object."
    }
    ]
    },
    {
    "@id": "#290",
    "@type": [
    "shacl:NodeShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:closed": [
    {
    "@value": false
    }
    ],
    "shacl:property": [
    {
    "@id": "#291",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#email"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#292",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ],
    "core:description": [
    {
    "@value": "Receiver email address. It's a virtual email address assigned to this user. Messages sent to this address will be rerouted to user's original address."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "email"
    }
    ]
    },
    {
    "@id": "#293",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#message"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#294",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ],
    "core:description": [
    {
    "@value": "Message body"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "message"
    }
    ]
    },
    {
    "@id": "#295",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#timestamp"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#296",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#integer"
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent timestamp as a Uxin timestamp."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 1
    }
    ],
    "shacl:name": [
    {
    "@value": "timestamp"
    }
    ]
    },
    {
    "@id": "#297",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#attachements"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#298",
    "@type": [
    "raml-shapes:ArrayShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "raml-shapes:items": [
    {
    "@id": "#299",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#string"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ],
    "core:description": [
    {
    "@value": "List of URLs to the attachments"
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "attachements"
    }
    ]
    },
    {
    "@id": "#301",
    "@type": [
    "shacl:PropertyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:path": [
    {
    "@id": "http://a.ml/vocabularies/data#important"
    }
    ],
    "raml-shapes:range": [
    {
    "@id": "#302",
    "@type": [
    "raml-shapes:ScalarShape",
    "raml-shapes:AnyShape",
    "shacl:Shape",
    "raml-shapes:Shape",
    "doc:DomainElement"
    ],
    "shacl:datatype": [
    {
    "@id": "http://www.w3.org/2001/XMLSchema#boolean"
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ],
    "core:description": [
    {
    "@value": "True if the message should be marked as an important."
    }
    ]
    }
    ],
    "shacl:minCount": [
    {
    "@value": 0
    }
    ],
    "shacl:name": [
    {
    "@value": "important"
    }
    ]
    }
    ],
    "shacl:name": [
    {
    "@value": "items"
    }
    ],
    "core:description": [
    {
    "@value": "Message sent by a user object. This represents a message in user's sent folder.\n"
    }
    ]
    }
    ],
    "@context": {
    "@base": "amf://id",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "apiContract": "http://a.ml/vocabularies/apiContract#",
    "core": "http://a.ml/vocabularies/core#",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "sourcemaps": "http://a.ml/vocabularies/document-source-maps#"
    }
    }
    ]
    