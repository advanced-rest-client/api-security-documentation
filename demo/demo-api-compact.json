{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "annotation",
      "raml-shapes:schema": {
        "@id": "amf://id#2",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "OAuth 2.0 allows to extend the specification with custom access token types,\nendpoint parameters, grant types or response types.\nThis annotation allows you to annotate the `settings` property of OAuth 2.0\nsecurity scheme type to inform applications about additional settings.\n## Use case\nLet's say a authorization server requires to send a `resource` query parameter\nwith the authorization request. The `resource` parameter can be any string.\nCurrently it is impossible to define this property in RAML file.\nSimilar if the code exchange request requires to put the `resource` parameter\ninto the request body.\nThis annotation allows you to define this parameter with the RAML definition\nand place the parameter in the right request.\n## Annotation Target\nThe [annotation target](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md#annotation-targets)\nfor those annotations is `SecuritySchemeSettings`.\nYou can only apply it to Security Scheme `settings` property.\n## Example\n```yaml\nannotationTypes:\n  customSettings: !include oauth-2-custom-settings.raml\nsecuritySchemes:\n  oauth2:\n    type: OAuth 2.0\n    describedBy:\n      headers:\n        Authorization:\n          example: \"Bearer token\"\n    settings:\n      (customSettings):\n        authorizationGrants: [custom_grant]\n        ignoreDefaultGrants:\n        authorizationSettings:\n          queryParameters:\n            resource:\n              type: string\n              required: true\n              description: |\n                A resource ID that defines a domain of authorization.\n          headers:\n            x-auth-resource:\n              type: string\n              required: false\n        accessTokenSettings:\n          body:\n            resource:\n              type: string\n              required: true\n              description: |\n                A resource ID that defines a domain of authorization.\n      accessTokenUri: https://auth.domain.com/authorize\n      authorizationUri: https://auth.domain.com/token\n      authorizationGrants: [implicit]\n      scopes: profile\n```\n## API console\nThis annotation is recognized and respected by API console.\n",
        "schema-org:name": "OAuth 2.0 custom settings",
        "shacl:closed": false,
        "shacl:name": "schema",
        "shacl:property": [
          {
            "@id": "amf://id#3",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#4",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Settings to be applied to the `authorizationUri` GET request.\nDefine any query parameters or headers that are required by your OAuth 2.0\nauthorization server implementation.\nThis settings can be applied only to `token` and `code` requests\n",
              "schema-org:name": "Authorization settings",
              "shacl:closed": false,
              "shacl:name": "authorizationSettings",
              "shacl:property": [
                {
                  "@id": "amf://id#5",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#6",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Query parameters to be applied to the `authorizationUri`.\nUse the same notation as RAML's `queryParameters`.\nIf you define a parameter that is already defined in OAuth 2.0 specification\n(RFC6749) it should be ignored by the processor.\n",
                    "schema-org:name": "Authorization query parameters",
                    "shacl:closed": false,
                    "shacl:name": "queryParameters",
                    "shacl:property": {
                      "@id": "amf://id#7",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#8",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": false,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:property": []
                      },
                      "shacl:minCount": 0,
                      "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                      "shacl:path": {
                        "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                      }
                    }
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "queryParameters",
                  "shacl:path": {
                    "@id": "data:queryParameters"
                  }
                },
                {
                  "@id": "amf://id#9",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#10",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Headers to be set on the authorization request.\nUse the same notation as RAML's `headers`.\n",
                    "schema-org:name": "Authorization headers",
                    "shacl:closed": false,
                    "shacl:name": "headers",
                    "shacl:property": {
                      "@id": "amf://id#11",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#12",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": false,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:property": []
                      },
                      "shacl:minCount": 0,
                      "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                      "shacl:path": {
                        "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                      }
                    }
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "headers",
                  "shacl:path": {
                    "@id": "data:headers"
                  }
                }
              ]
            },
            "shacl:minCount": 0,
            "shacl:name": "authorizationSettings",
            "shacl:path": {
              "@id": "data:authorizationSettings"
            }
          },
          {
            "@id": "amf://id#13",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#14",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Settings to be applied to the token endpoint POST request.\nDefine query parameters, headers or custom body paramaeters that should\nbe included into the request.\nNote, as per RFC6749, the request content type is `application/x-www-form-urlencoded`\nand the processor has to always assume this content type.\n",
              "schema-org:name": "Access token settings",
              "shacl:closed": false,
              "shacl:name": "accessTokenSettings",
              "shacl:property": [
                {
                  "@id": "amf://id#15",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#16",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Query parameters to be applied to the `accessTokenUri`.\nUse the same notation as RAML's `queryParameters`.\nOAuth 2.0 specification does not specify any query parameters for this\ntype of request.\n",
                    "schema-org:name": "Token query parameters",
                    "shacl:closed": false,
                    "shacl:name": "queryParameters",
                    "shacl:property": {
                      "@id": "amf://id#17",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#18",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": false,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:property": []
                      },
                      "shacl:minCount": 0,
                      "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                      "shacl:path": {
                        "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                      }
                    }
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "queryParameters",
                  "shacl:path": {
                    "@id": "data:queryParameters"
                  }
                },
                {
                  "@id": "amf://id#19",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#20",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Headers to be set on the token request.\nUse the same notation as RAML's `headers`.\n",
                    "schema-org:name": "Token request headers",
                    "shacl:closed": false,
                    "shacl:name": "headers",
                    "shacl:property": {
                      "@id": "amf://id#21",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#22",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "shacl:closed": false,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:property": []
                      },
                      "shacl:minCount": 0,
                      "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                      "shacl:path": {
                        "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                      }
                    }
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "headers",
                  "shacl:path": {
                    "@id": "data:headers"
                  }
                },
                {
                  "@id": "amf://id#23",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#24",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Body parameters to be applied to the `accessTokenUri`.\nProperties will be applied to the default set of OAuth 2.0 token request\nparameters.\nIf you define a parameter that is already defined in OAuth 2.0 specification\n(RFC6749) it should be ignored by the processor.\n",
                    "schema-org:name": "Token body parameters",
                    "shacl:closed": false,
                    "shacl:name": "body",
                    "shacl:property": []
                  },
                  "shacl:minCount": 0,
                  "shacl:name": "body",
                  "shacl:path": {
                    "@id": "data:body"
                  }
                }
              ]
            },
            "shacl:minCount": 0,
            "shacl:name": "accessTokenSettings",
            "shacl:path": {
              "@id": "data:accessTokenSettings"
            }
          },
          {
            "@id": "amf://id#25",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#26",
              "@type": [
                "raml-shapes:ArrayShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "raml-shapes:items": {
                "@id": "amf://id#27",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              "schema-org:description": "List of custom authorization granst supported by your OAuth 2.0 server\n",
              "schema-org:name": "Custom authorization grants",
              "shacl:name": "authorizationGrants"
            },
            "shacl:minCount": 0,
            "shacl:name": "authorizationGrants",
            "shacl:path": {
              "@id": "data:authorizationGrants"
            }
          },
          {
            "@id": "amf://id#29",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#30",
              "@type": [
                "raml-shapes:NilShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "shacl:name": "ignoreDefaultGrants"
            },
            "shacl:minCount": 0,
            "shacl:name": "ignoreDefaultGrants",
            "shacl:path": {
              "@id": "data:ignoreDefaultGrants"
            }
          }
        ]
      },
      "rdfs:domain": {
        "@id": "raml-http:SecuritySettings"
      }
    },
    {
      "@id": "amf://id#32",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#33",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "SpecialToken",
        "raml-http:schema": {
          "@id": "amf://id#34",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Used to send a custom token.\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a custom token.\n",
        "schema-org:name": "SpecialToken",
        "hydra:required": true
      },
      "raml-http:parameter": [
        {
          "@id": "amf://id#35",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "debugToken",
          "raml-http:schema": {
            "@id": "amf://id#36",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#36/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#37",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Info"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#38",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Log"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#39",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Warning"
                }
              },
              "rdfs:_4": {
                "@id": "amf://id#40",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Error"
                }
              },
              "rdfs:_5": {
                "@id": "amf://id#41",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Critical"
                }
              }
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
          "schema-org:name": "debugToken",
          "hydra:required": false
        },
        {
          "@id": "amf://id#42",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "booleanToken",
          "raml-http:schema": {
            "@id": "amf://id#43",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Just to test boolean values.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#44",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "shacl:defaultValueStr": "true",
            "shacl:name": "schema"
          },
          "schema-org:description": "Just to test boolean values.",
          "schema-org:name": "booleanToken",
          "hydra:required": true
        }
      ],
      "security:name": "x-custom",
      "security:type": "x-custom",
      "schema-org:description": "A custom security scheme for authenticating requests.\n",
      "hydra:response": [
        {
          "@id": "amf://id#45",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "schema-org:description": "Bad token.\n",
          "schema-org:name": "401",
          "hydra:statusCode": "401"
        },
        {
          "@id": "amf://id#46",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "schema-org:name": "403",
          "hydra:statusCode": "403"
        }
      ]
    },
    {
      "@id": "amf://id#48",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:parameter": [
        {
          "@id": "amf://id#49",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "apiUserId",
          "raml-http:schema": {
            "@id": "amf://id#50",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Your api user ID. Some imaginary value.\n",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Your api user ID. Some imaginary value.\n",
          "schema-org:name": "apiUserId",
          "hydra:required": true
        },
        {
          "@id": "amf://id#51",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "apiNonce",
          "raml-http:schema": {
            "@id": "amf://id#52",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Random string",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Random string",
          "schema-org:name": "apiNonce",
          "hydra:required": true
        }
      ],
      "security:name": "x-other",
      "security:type": "x-custom",
      "schema-org:description": "Other custom security method for authorization.\n",
      "hydra:response": {
        "@id": "amf://id#53",
        "@type": [
          "raml-http:Response",
          "doc:DomainElement"
        ],
        "raml-http:payload": {
          "@id": "amf://id#54",
          "@type": [
            "raml-http:Payload",
            "doc:DomainElement"
          ],
          "raml-http:mediaType": "application/json",
          "raml-http:schema": {
            "@id": "amf://id#55",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": false,
            "shacl:name": "schema",
            "shacl:property": [
              {
                "@id": "amf://id#56",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#57",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Always true. Indicates that the response is errord.",
                  "shacl:datatype": {
                    "@id": "xsd:boolean"
                  },
                  "shacl:name": "error"
                },
                "shacl:minCount": 1,
                "shacl:name": "error",
                "shacl:path": {
                  "@id": "data:error"
                }
              },
              {
                "@id": "amf://id#58",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#59",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Human readable message describing the error.",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "message"
                },
                "shacl:minCount": 1,
                "shacl:name": "message",
                "shacl:path": {
                  "@id": "data:message"
                }
              }
            ]
          }
        },
        "schema-org:description": "Bad token autorization.\n",
        "schema-org:name": "401",
        "hydra:statusCode": "401"
      }
    },
    {
      "@id": "amf://id#61",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "security:name": "digest",
      "security:type": "Digest Authentication",
      "schema-org:description": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
    },
    {
      "@id": "amf://id#63",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#64",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "api_key_pass_through",
        "raml-http:schema": {
          "@id": "amf://id#65",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:name": "api_key_pass_through",
        "hydra:required": true
      },
      "raml-http:parameter": {
        "@id": "amf://id#66",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "query",
        "raml-http:paramName": "api-key-pass-through",
        "raml-http:schema": {
          "@id": "amf://id#67",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:name": "api-key-pass-through",
        "hydra:required": true
      },
      "security:name": "pass_through",
      "security:type": "Pass Through",
      "schema-org:description": "This API supports Pass Through Authentication for staging environment.\n"
    },
    {
      "@id": "amf://id#69",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:parameter": {
        "@id": "amf://id#70",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "query",
        "raml-http:paramName": "access_token",
        "raml-http:schema": {
          "@id": "amf://id#71",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Apply access token here.",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Apply access token here.",
        "schema-org:name": "access_token",
        "hydra:required": true
      },
      "security:name": "oauth2Annotated",
      "security:settings": {
        "@id": "amf://id#72",
        "@type": [
          "security:OAuth2Settings",
          "security:Settings",
          "doc:DomainElement"
        ],
        "amf://id#1": {
          "@id": "amf://id#76",
          "@type": "data:Object",
          "data:accessTokenSettings": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48",
            "@type": "data:Object",
            "data:body": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55",
              "@type": "data:Object",
              "data:bodyDetailed": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55/object_57",
                "@type": "data:Object",
                "data:displayName": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55/object_57/scalar_60",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Body detailed property"
                  }
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55/object_57/scalar_59",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55/object_57/scalar_58",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "boolean"
                  }
                }
              },
              "data:bodyTokenResource": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_55/scalar_56",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "string"
                }
              }
            },
            "data:queryParameters": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49",
              "@type": "data:Object",
              "data:detailedTokenResource": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49/object_51",
                "@type": "data:Object",
                "data:description": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49/object_51/scalar_53",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "some description"
                  }
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49/object_51/scalar_54",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49/object_51/scalar_52",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "number"
                  }
                }
              },
              "data:queryTokenResource": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_48/object_49/scalar_50",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "string"
                }
              }
            }
          },
          "data:authorizationGrants": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/array_2",
            "@type": [
              "data:Array",
              "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
            ],
            "data:pos0": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/array_2/scalar_3"
            },
            "data:pos1": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/array_2/scalar_4"
            },
            "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
              {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/array_2/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "annotated_custom_grant"
                }
              },
              {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/array_2/scalar_4",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "annotated_custom_grant2"
                }
              }
            ]
          },
          "data:authorizationSettings": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5",
            "@type": "data:Object",
            "data:headers": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40",
              "@type": "data:Object",
              "data:x-auth-resource": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41",
                "@type": "data:Object",
                "data:enum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44",
                  "@type": [
                    "data:Array",
                    "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                  ],
                  "data:pos0": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_45"
                  },
                  "data:pos1": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_46"
                  },
                  "data:pos2": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_47"
                  },
                  "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
                    {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_45",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "a"
                      }
                    },
                    {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_46",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "b"
                      }
                    },
                    {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/array_44/scalar_47",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "c"
                      }
                    }
                  ]
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/scalar_43",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_40/object_41/scalar_42",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "string"
                  }
                }
              }
            },
            "data:queryParameters": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6",
              "@type": "data:Object",
              "data:dateParam": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_30",
                "@type": "data:Object",
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_30/scalar_32",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_30/scalar_31",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "date-only"
                  }
                }
              },
              "data:numericParam": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22",
                "@type": "data:Object",
                "data:example": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_29",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "22"
                  }
                },
                "data:format": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_27",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "float"
                  }
                },
                "data:maximum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_25",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "20"
                  }
                },
                "data:minimum": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_24",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "10"
                  }
                },
                "data:multipleOf": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_26",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "2"
                  }
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_28",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_22/scalar_23",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "number"
                  }
                }
              },
              "data:repetableParam1": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_33",
                "@type": "data:Object",
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_33/scalar_35",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_33/scalar_34",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "string[]"
                  }
                }
              },
              "data:repetableParam2": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_36",
                "@type": "data:Object",
                "data:items": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_36/scalar_38",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "integer"
                  }
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_36/scalar_39",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "false"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_36/scalar_37",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "array"
                  }
                }
              },
              "data:resource": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7",
                "@type": "data:Object",
                "data:default": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_12",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "some default"
                  }
                },
                "data:description": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "A resource ID that defines a domain of authorization.\n"
                  }
                },
                "data:displayName": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Hello query parameeter"
                  }
                },
                "data:examples": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/object_13",
                  "@type": "data:Object",
                  "data:named": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/object_13/scalar_14",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "named example value"
                    }
                  },
                  "data:otherExample": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/object_13/scalar_15",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "test example value"
                    }
                  }
                },
                "data:maxLength": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_19",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "12"
                  }
                },
                "data:minLength": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_20",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "3"
                  }
                },
                "data:pattern": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/array_16",
                  "@type": [
                    "data:Array",
                    "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"
                  ],
                  "data:pos0": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/array_16/scalar_17"
                  },
                  "data:pos1": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/array_16/scalar_18"
                  },
                  "http://www.w3.org/1999/02/22-rdf-syntax-ns#member": [
                    {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/array_16/scalar_17",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "a-zA-Z\\s\\S"
                      }
                    },
                    {
                      "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/array_16/scalar_18",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "test"
                      }
                    }
                  ]
                },
                "data:required": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_21",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "data:type": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/securitySchemes/oauth2Annotated/settings/oauth2/oauth-2-custom-settings/object_1/object_5/object_6/object_7/scalar_8",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "string"
                  }
                }
              }
            }
          },
          "doc:name": "oauth-2-custom-settings"
        },
        "doc:customDomainProperties": {
          "@id": "amf://id#1"
        },
        "security:accessTokenUri": "https://token.com",
        "security:authorizationGrant": [
          "implicit",
          "authorization_code"
        ],
        "security:authorizationUri": "https://auth.com",
        "security:scope": [
          {
            "@id": "amf://id#73",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "profile"
          },
          {
            "@id": "amf://id#74",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "email"
          }
        ]
      },
      "security:type": "OAuth 2.0",
      "schema-org:displayName": "OAuth 2.0 with annotation"
    },
    {
      "@id": "amf://id#77",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#78",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "authorization",
        "raml-http:schema": {
          "@id": "amf://id#79",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "doc:examples": {
            "@id": "amf://id#80",
            "@type": [
              "doc:Example",
              "doc:DomainElement"
            ],
            "doc:strict": true,
            "doc:structuredValue": {
              "@id": "amf://id#81",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ya.2453vfDb3cJHisdf.*&H"
              }
            },
            "http://a.ml/vocabularies/document-source-maps#sources": {
              "@id": "amf://id#80/source-map",
              "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
              "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                "http://a.ml/vocabularies/document-source-maps#element": "amf://id#80",
                "http://a.ml/vocabularies/document-source-maps#value": "amf://id#78"
              }
            },
            "shacl:raw": "ya.2453vfDb3cJHisdf.*&H"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
        "schema-org:name": "authorization",
        "hydra:required": false
      },
      "raml-http:parameter": {
        "@id": "amf://id#82",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "query",
        "raml-http:paramName": "access_token",
        "raml-http:schema": {
          "@id": "amf://id#83",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
        "schema-org:name": "access_token",
        "hydra:required": false
      },
      "security:name": "oauth_2_0",
      "security:settings": {
        "@id": "amf://id#90",
        "@type": [
          "security:OAuth2Settings",
          "security:Settings",
          "doc:DomainElement"
        ],
        "security:accessTokenUri": "http://api.domain.com/oauth2/token",
        "security:authorizationGrant": [
          "authorization_code",
          "implicit"
        ],
        "security:authorizationUri": "http://api.domain.com/oauth2/auth",
        "security:scope": [
          {
            "@id": "amf://id#91",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "profile"
          },
          {
            "@id": "amf://id#92",
            "@type": [
              "security:Scope",
              "doc:DomainElement"
            ],
            "security:name": "email"
          }
        ]
      },
      "security:type": "OAuth 2.0",
      "schema-org:description": "This API supports OAuth 2.0 for authenticating all API requests.",
      "hydra:response": [
        {
          "@id": "amf://id#84",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "raml-http:payload": {
            "@id": "amf://id#85",
            "@type": [
              "raml-http:Payload",
              "doc:DomainElement"
            ],
            "raml-http:mediaType": "application/json",
            "raml-http:schema": {
              "@id": "amf://id#86",
              "@type": [
                "raml-shapes:AnyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "shacl:name": "schema"
            }
          },
          "schema-org:description": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user.",
          "schema-org:name": "401",
          "hydra:statusCode": "401"
        },
        {
          "@id": "amf://id#87",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "raml-http:payload": {
            "@id": "amf://id#88",
            "@type": [
              "raml-http:Payload",
              "doc:DomainElement"
            ],
            "raml-http:mediaType": "application/json",
            "raml-http:schema": {
              "@id": "amf://id#89",
              "@type": [
                "raml-shapes:AnyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "shacl:name": "schema"
            }
          },
          "schema-org:description": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.",
          "schema-org:name": "403",
          "hydra:statusCode": "403"
        }
      ]
    },
    {
      "@id": "amf://id#94",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#95",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "Authorization",
        "raml-http:schema": {
          "@id": "amf://id#96",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Standard authorization header.\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Standard authorization header.\n",
        "schema-org:name": "Authorization",
        "hydra:required": true
      },
      "security:name": "basic",
      "security:settings": {
        "@id": "amf://id#97",
        "@type": [
          "security:Settings",
          "doc:DomainElement"
        ],
        "security:additionalProperties": {
          "@id": "amf://id#98",
          "@type": "data:Object",
          "data:test": {
            "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2",
            "@type": "data:Object",
            "data:type": {
              "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "none"
              }
            }
          }
        }
      },
      "security:type": "Basic Authentication",
      "schema-org:description": "This API supports Basic Authentication for staging environment.\n"
    },
    {
      "@id": "amf://id#100",
      "@type": [
        "security:SecurityScheme",
        "doc:DomainElement"
      ],
      "raml-http:header": {
        "@id": "amf://id#101",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "header",
        "raml-http:paramName": "Authorization",
        "raml-http:schema": {
          "@id": "amf://id#102",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
        "schema-org:name": "Authorization",
        "hydra:required": true
      },
      "raml-http:parameter": {
        "@id": "amf://id#103",
        "@type": [
          "raml-http:Parameter",
          "doc:DomainElement"
        ],
        "raml-http:binding": "query",
        "raml-http:paramName": "token",
        "raml-http:schema": {
          "@id": "amf://id#104",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "schema"
        },
        "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
        "schema-org:name": "token",
        "hydra:required": true
      },
      "security:name": "oauth_1_0",
      "security:settings": {
        "@id": "amf://id#105",
        "@type": [
          "security:OAuth1Settings",
          "security:Settings",
          "doc:DomainElement"
        ],
        "security:authorizationUri": "http://api.domain.com/oauth1/authorize",
        "security:requestTokenUri": "http://api.domain.com/oauth1/request_token",
        "security:signature": [
          "RSA-SHA1",
          "HMAC-SHA1"
        ],
        "security:tokenCredentialsUri": "http://api.domain.com/oauth1/access_token"
      },
      "security:type": "OAuth 1.0",
      "schema-org:description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#115",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": {
      "@id": "amf://id#116",
      "@type": [
        "raml-http:EndPoint",
        "doc:DomainElement"
      ],
      "raml-http:path": "/test",
      "hydra:supportedOperation": {
        "@id": "amf://id#117",
        "@type": [
          "hydra:Operation",
          "doc:DomainElement"
        ],
        "security:security": [
          {
            "@id": "amf://id#118",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "null"
          },
          {
            "@id": "amf://id#119",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "oauth_2_0",
            "security:scheme": {
              "@id": "amf://id#77",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#78",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "authorization",
                "raml-http:schema": {
                  "@id": "amf://id#79",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#80",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#81",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "ya.2453vfDb3cJHisdf.*&H"
                      }
                    },
                    "http://a.ml/vocabularies/document-source-maps#sources": {
                      "@id": "amf://id#80/source-map",
                      "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                      "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                        "http://a.ml/vocabularies/document-source-maps#element": "amf://id#80",
                        "http://a.ml/vocabularies/document-source-maps#value": "amf://id#78"
                      }
                    },
                    "shacl:raw": "ya.2453vfDb3cJHisdf.*&H"
                  },
                  "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
                "schema-org:name": "authorization",
                "hydra:required": false
              },
              "raml-http:parameter": {
                "@id": "amf://id#82",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "access_token",
                "raml-http:schema": {
                  "@id": "amf://id#83",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
                "schema-org:name": "access_token",
                "hydra:required": false
              },
              "security:name": "oauth_2_0",
              "security:settings": {
                "@id": "amf://id#90",
                "@type": [
                  "security:OAuth2Settings",
                  "security:Settings",
                  "doc:DomainElement"
                ],
                "security:accessTokenUri": "http://api.domain.com/oauth2/token",
                "security:authorizationGrant": [
                  "authorization_code",
                  "implicit"
                ],
                "security:authorizationUri": "http://api.domain.com/oauth2/auth",
                "security:scope": [
                  {
                    "@id": "amf://id#91",
                    "@type": [
                      "security:Scope",
                      "doc:DomainElement"
                    ],
                    "security:name": "profile"
                  },
                  {
                    "@id": "amf://id#92",
                    "@type": [
                      "security:Scope",
                      "doc:DomainElement"
                    ],
                    "security:name": "email"
                  }
                ]
              },
              "security:type": "OAuth 2.0",
              "schema-org:description": "This API supports OAuth 2.0 for authenticating all API requests.",
              "hydra:response": [
                {
                  "@id": "amf://id#84",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "raml-http:payload": {
                    "@id": "amf://id#85",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#86",
                      "@type": [
                        "raml-shapes:AnyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "shacl:name": "schema"
                    }
                  },
                  "schema-org:description": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user.",
                  "schema-org:name": "401",
                  "hydra:statusCode": "401"
                },
                {
                  "@id": "amf://id#87",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "raml-http:payload": {
                    "@id": "amf://id#88",
                    "@type": [
                      "raml-http:Payload",
                      "doc:DomainElement"
                    ],
                    "raml-http:mediaType": "application/json",
                    "raml-http:schema": {
                      "@id": "amf://id#89",
                      "@type": [
                        "raml-shapes:AnyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "shacl:name": "schema"
                    }
                  },
                  "schema-org:description": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.",
                  "schema-org:name": "403",
                  "hydra:statusCode": "403"
                }
              ]
            }
          },
          {
            "@id": "amf://id#120",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "oauth_1_0",
            "security:scheme": {
              "@id": "amf://id#100",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#101",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "Authorization",
                "raml-http:schema": {
                  "@id": "amf://id#102",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
                "schema-org:name": "Authorization",
                "hydra:required": true
              },
              "raml-http:parameter": {
                "@id": "amf://id#103",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "token",
                "raml-http:schema": {
                  "@id": "amf://id#104",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
                "schema-org:name": "token",
                "hydra:required": true
              },
              "security:name": "oauth_1_0",
              "security:settings": {
                "@id": "amf://id#105",
                "@type": [
                  "security:OAuth1Settings",
                  "security:Settings",
                  "doc:DomainElement"
                ],
                "security:authorizationUri": "http://api.domain.com/oauth1/authorize",
                "security:requestTokenUri": "http://api.domain.com/oauth1/request_token",
                "security:signature": [
                  "RSA-SHA1",
                  "HMAC-SHA1"
                ],
                "security:tokenCredentialsUri": "http://api.domain.com/oauth1/access_token"
              },
              "security:type": "OAuth 1.0",
              "schema-org:description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
            }
          },
          {
            "@id": "amf://id#121",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "pass_through",
            "security:scheme": {
              "@id": "amf://id#63",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#64",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "api_key_pass_through",
                "raml-http:schema": {
                  "@id": "amf://id#65",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "api_key_pass_through",
                "hydra:required": true
              },
              "raml-http:parameter": {
                "@id": "amf://id#66",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "query",
                "raml-http:paramName": "api-key-pass-through",
                "raml-http:schema": {
                  "@id": "amf://id#67",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:name": "api-key-pass-through",
                "hydra:required": true
              },
              "security:name": "pass_through",
              "security:type": "Pass Through",
              "schema-org:description": "This API supports Pass Through Authentication for staging environment.\n"
            }
          },
          {
            "@id": "amf://id#122",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "basic",
            "security:scheme": {
              "@id": "amf://id#94",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#95",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "Authorization",
                "raml-http:schema": {
                  "@id": "amf://id#96",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Standard authorization header.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Standard authorization header.\n",
                "schema-org:name": "Authorization",
                "hydra:required": true
              },
              "security:name": "basic",
              "security:settings": {
                "@id": "amf://id#97",
                "@type": [
                  "security:Settings",
                  "doc:DomainElement"
                ],
                "security:additionalProperties": {
                  "@id": "amf://id#98",
                  "@type": "data:Object",
                  "data:test": {
                    "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2",
                    "@type": "data:Object",
                    "data:type": {
                      "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2/scalar_3",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "none"
                      }
                    }
                  }
                }
              },
              "security:type": "Basic Authentication",
              "schema-org:description": "This API supports Basic Authentication for staging environment.\n"
            }
          },
          {
            "@id": "amf://id#123",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "digest",
            "security:scheme": {
              "@id": "amf://id#61",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "security:name": "digest",
              "security:type": "Digest Authentication",
              "schema-org:description": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
            }
          },
          {
            "@id": "amf://id#124",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "x-custom",
            "security:scheme": {
              "@id": "amf://id#32",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:header": {
                "@id": "amf://id#33",
                "@type": [
                  "raml-http:Parameter",
                  "doc:DomainElement"
                ],
                "raml-http:binding": "header",
                "raml-http:paramName": "SpecialToken",
                "raml-http:schema": {
                  "@id": "amf://id#34",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Used to send a custom token.\n",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "schema"
                },
                "schema-org:description": "Used to send a custom token.\n",
                "schema-org:name": "SpecialToken",
                "hydra:required": true
              },
              "raml-http:parameter": [
                {
                  "@id": "amf://id#35",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "debugToken",
                  "raml-http:schema": {
                    "@id": "amf://id#36",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:in": {
                      "@id": "amf://id#36/list",
                      "@type": "rdfs:Seq",
                      "rdfs:_1": {
                        "@id": "amf://id#37",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Info"
                        }
                      },
                      "rdfs:_2": {
                        "@id": "amf://id#38",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Log"
                        }
                      },
                      "rdfs:_3": {
                        "@id": "amf://id#39",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Warning"
                        }
                      },
                      "rdfs:_4": {
                        "@id": "amf://id#40",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Error"
                        }
                      },
                      "rdfs:_5": {
                        "@id": "amf://id#41",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Critical"
                        }
                      }
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
                  "schema-org:name": "debugToken",
                  "hydra:required": false
                },
                {
                  "@id": "amf://id#42",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "booleanToken",
                  "raml-http:schema": {
                    "@id": "amf://id#43",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Just to test boolean values.",
                    "shacl:datatype": {
                      "@id": "xsd:boolean"
                    },
                    "shacl:defaultValue": {
                      "@id": "amf://id#44",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "shacl:defaultValueStr": "true",
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Just to test boolean values.",
                  "schema-org:name": "booleanToken",
                  "hydra:required": true
                }
              ],
              "security:name": "x-custom",
              "security:type": "x-custom",
              "schema-org:description": "A custom security scheme for authenticating requests.\n",
              "hydra:response": [
                {
                  "@id": "amf://id#45",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Bad token.\n",
                  "schema-org:name": "401",
                  "hydra:statusCode": "401"
                },
                {
                  "@id": "amf://id#46",
                  "@type": [
                    "raml-http:Response",
                    "doc:DomainElement"
                  ],
                  "schema-org:name": "403",
                  "hydra:statusCode": "403"
                }
              ]
            }
          },
          {
            "@id": "amf://id#125",
            "@type": [
              "security:ParametrizedSecurityScheme",
              "doc:DomainElement"
            ],
            "security:name": "x-other",
            "security:scheme": {
              "@id": "amf://id#48",
              "@type": [
                "security:SecurityScheme",
                "doc:DomainElement"
              ],
              "raml-http:parameter": [
                {
                  "@id": "amf://id#49",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "apiUserId",
                  "raml-http:schema": {
                    "@id": "amf://id#50",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Your api user ID. Some imaginary value.\n",
                    "shacl:datatype": {
                      "@id": "raml-shapes:number"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Your api user ID. Some imaginary value.\n",
                  "schema-org:name": "apiUserId",
                  "hydra:required": true
                },
                {
                  "@id": "amf://id#51",
                  "@type": [
                    "raml-http:Parameter",
                    "doc:DomainElement"
                  ],
                  "raml-http:binding": "query",
                  "raml-http:paramName": "apiNonce",
                  "raml-http:schema": {
                    "@id": "amf://id#52",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Random string",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "schema"
                  },
                  "schema-org:description": "Random string",
                  "schema-org:name": "apiNonce",
                  "hydra:required": true
                }
              ],
              "security:name": "x-other",
              "security:type": "x-custom",
              "schema-org:description": "Other custom security method for authorization.\n",
              "hydra:response": {
                "@id": "amf://id#53",
                "@type": [
                  "raml-http:Response",
                  "doc:DomainElement"
                ],
                "raml-http:payload": {
                  "@id": "amf://id#54",
                  "@type": [
                    "raml-http:Payload",
                    "doc:DomainElement"
                  ],
                  "raml-http:mediaType": "application/json",
                  "raml-http:schema": {
                    "@id": "amf://id#55",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "shacl:closed": false,
                    "shacl:name": "schema",
                    "shacl:property": [
                      {
                        "@id": "amf://id#56",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#57",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "Always true. Indicates that the response is errord.",
                          "shacl:datatype": {
                            "@id": "xsd:boolean"
                          },
                          "shacl:name": "error"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "error",
                        "shacl:path": {
                          "@id": "data:error"
                        }
                      },
                      {
                        "@id": "amf://id#58",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#59",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "Human readable message describing the error.",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "message"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "message",
                        "shacl:path": {
                          "@id": "data:message"
                        }
                      }
                    ]
                  }
                },
                "schema-org:description": "Bad token autorization.\n",
                "schema-org:name": "401",
                "hydra:statusCode": "401"
              }
            }
          }
        ],
        "hydra:method": "get"
      }
    },
    "raml-http:server": {
      "@id": "amf://id#126",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://secured.domain.com/"
    },
    "schema-org:name": "Security Demo",
    "schema-org:version": "v1"
  },
  "doc:references": [
    {
      "@id": "amf://id#107",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#32",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#33",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "SpecialToken",
          "raml-http:schema": {
            "@id": "amf://id#34",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Used to send a custom token.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a custom token.\n",
          "schema-org:name": "SpecialToken",
          "hydra:required": true
        },
        "raml-http:parameter": [
          {
            "@id": "amf://id#35",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "debugToken",
            "raml-http:schema": {
              "@id": "amf://id#36",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#36/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#37",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Info"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#38",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Log"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#39",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Warning"
                  }
                },
                "rdfs:_4": {
                  "@id": "amf://id#40",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Error"
                  }
                },
                "rdfs:_5": {
                  "@id": "amf://id#41",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Critical"
                  }
                }
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "Select one of available values to run the request in the debug mode with selected level.",
            "schema-org:name": "debugToken",
            "hydra:required": false
          },
          {
            "@id": "amf://id#42",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "booleanToken",
            "raml-http:schema": {
              "@id": "amf://id#43",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Just to test boolean values.",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:defaultValue": {
                "@id": "amf://id#44",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:defaultValueStr": "true",
              "shacl:name": "schema"
            },
            "schema-org:description": "Just to test boolean values.",
            "schema-org:name": "booleanToken",
            "hydra:required": true
          }
        ],
        "security:name": "x-custom",
        "security:type": "x-custom",
        "schema-org:description": "A custom security scheme for authenticating requests.\n",
        "hydra:response": [
          {
            "@id": "amf://id#45",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "schema-org:description": "Bad token.\n",
            "schema-org:name": "401",
            "hydra:statusCode": "401"
          },
          {
            "@id": "amf://id#46",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "schema-org:name": "403",
            "hydra:statusCode": "403"
          }
        ]
      }
    },
    {
      "@id": "amf://id#108",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#63",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#64",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "api_key_pass_through",
          "raml-http:schema": {
            "@id": "amf://id#65",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:name": "api_key_pass_through",
          "hydra:required": true
        },
        "raml-http:parameter": {
          "@id": "amf://id#66",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "api-key-pass-through",
          "raml-http:schema": {
            "@id": "amf://id#67",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:name": "api-key-pass-through",
          "hydra:required": true
        },
        "security:name": "pass_through",
        "security:type": "Pass Through",
        "schema-org:description": "This API supports Pass Through Authentication for staging environment.\n"
      }
    },
    {
      "@id": "amf://id#109",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#77",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#78",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "authorization",
          "raml-http:schema": {
            "@id": "amf://id#79",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#80",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#81",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ya.2453vfDb3cJHisdf.*&H"
                }
              },
              "http://a.ml/vocabularies/document-source-maps#sources": {
                "@id": "amf://id#80/source-map",
                "@type": "http://a.ml/vocabularies/document-source-maps#SourceMap",
                "http://a.ml/vocabularies/document-source-maps#tracked-element": {
                  "http://a.ml/vocabularies/document-source-maps#element": "amf://id#80",
                  "http://a.ml/vocabularies/document-source-maps#value": "amf://id#78"
                }
              },
              "shacl:raw": "ya.2453vfDb3cJHisdf.*&H"
            },
            "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"access_token\" query string parameter.",
          "schema-org:name": "authorization",
          "hydra:required": false
        },
        "raml-http:parameter": {
          "@id": "amf://id#82",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "access_token",
          "raml-http:schema": {
            "@id": "amf://id#83",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Used to send a valid OAuth 2 access token. Do not use with the \"Authorization\" header.",
          "schema-org:name": "access_token",
          "hydra:required": false
        },
        "security:name": "oauth_2_0",
        "security:settings": {
          "@id": "amf://id#90",
          "@type": [
            "security:OAuth2Settings",
            "security:Settings",
            "doc:DomainElement"
          ],
          "security:accessTokenUri": "http://api.domain.com/oauth2/token",
          "security:authorizationGrant": [
            "authorization_code",
            "implicit"
          ],
          "security:authorizationUri": "http://api.domain.com/oauth2/auth",
          "security:scope": [
            {
              "@id": "amf://id#91",
              "@type": [
                "security:Scope",
                "doc:DomainElement"
              ],
              "security:name": "profile"
            },
            {
              "@id": "amf://id#92",
              "@type": [
                "security:Scope",
                "doc:DomainElement"
              ],
              "security:name": "email"
            }
          ]
        },
        "security:type": "OAuth 2.0",
        "schema-org:description": "This API supports OAuth 2.0 for authenticating all API requests.",
        "hydra:response": [
          {
            "@id": "amf://id#84",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#85",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#86",
                "@type": [
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "shacl:name": "schema"
              }
            },
            "schema-org:description": "Bad or expired token. This can happen if the user or Dropbox revoked or expired an access token. To fix, re-authenticate the user.",
            "schema-org:name": "401",
            "hydra:statusCode": "401"
          },
          {
            "@id": "amf://id#87",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": {
              "@id": "amf://id#88",
              "@type": [
                "raml-http:Payload",
                "doc:DomainElement"
              ],
              "raml-http:mediaType": "application/json",
              "raml-http:schema": {
                "@id": "amf://id#89",
                "@type": [
                  "raml-shapes:AnyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "shacl:name": "schema"
              }
            },
            "schema-org:description": "Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.",
            "schema-org:name": "403",
            "hydra:statusCode": "403"
          }
        ]
      }
    },
    {
      "@id": "amf://id#110",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#48",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:parameter": [
          {
            "@id": "amf://id#49",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "apiUserId",
            "raml-http:schema": {
              "@id": "amf://id#50",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Your api user ID. Some imaginary value.\n",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "Your api user ID. Some imaginary value.\n",
            "schema-org:name": "apiUserId",
            "hydra:required": true
          },
          {
            "@id": "amf://id#51",
            "@type": [
              "raml-http:Parameter",
              "doc:DomainElement"
            ],
            "raml-http:binding": "query",
            "raml-http:paramName": "apiNonce",
            "raml-http:schema": {
              "@id": "amf://id#52",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Random string",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "schema"
            },
            "schema-org:description": "Random string",
            "schema-org:name": "apiNonce",
            "hydra:required": true
          }
        ],
        "security:name": "x-other",
        "security:type": "x-custom",
        "schema-org:description": "Other custom security method for authorization.\n",
        "hydra:response": {
          "@id": "amf://id#53",
          "@type": [
            "raml-http:Response",
            "doc:DomainElement"
          ],
          "raml-http:payload": {
            "@id": "amf://id#54",
            "@type": [
              "raml-http:Payload",
              "doc:DomainElement"
            ],
            "raml-http:mediaType": "application/json",
            "raml-http:schema": {
              "@id": "amf://id#55",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:closed": false,
              "shacl:name": "schema",
              "shacl:property": [
                {
                  "@id": "amf://id#56",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#57",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Always true. Indicates that the response is errord.",
                    "shacl:datatype": {
                      "@id": "xsd:boolean"
                    },
                    "shacl:name": "error"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "error",
                  "shacl:path": {
                    "@id": "data:error"
                  }
                },
                {
                  "@id": "amf://id#58",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#59",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Human readable message describing the error.",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "message"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "message",
                  "shacl:path": {
                    "@id": "data:message"
                  }
                }
              ]
            }
          },
          "schema-org:description": "Bad token autorization.\n",
          "schema-org:name": "401",
          "hydra:statusCode": "401"
        }
      }
    },
    {
      "@id": "amf://id#111",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#100",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#101",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "Authorization",
          "raml-http:schema": {
            "@id": "amf://id#102",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Received Access Token.\n\nDo not mix with query parameters.\n",
          "schema-org:name": "Authorization",
          "hydra:required": true
        },
        "raml-http:parameter": {
          "@id": "amf://id#103",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "query",
          "raml-http:paramName": "token",
          "raml-http:schema": {
            "@id": "amf://id#104",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Received Access Token.\n\nDo not mix with headers\n",
          "schema-org:name": "token",
          "hydra:required": true
        },
        "security:name": "oauth_1_0",
        "security:settings": {
          "@id": "amf://id#105",
          "@type": [
            "security:OAuth1Settings",
            "security:Settings",
            "doc:DomainElement"
          ],
          "security:authorizationUri": "http://api.domain.com/oauth1/authorize",
          "security:requestTokenUri": "http://api.domain.com/oauth1/request_token",
          "security:signature": [
            "RSA-SHA1",
            "HMAC-SHA1"
          ],
          "security:tokenCredentialsUri": "http://api.domain.com/oauth1/access_token"
        },
        "security:type": "OAuth 1.0",
        "schema-org:description": "OAuth 1.0 continues to be supported for all API requests, but OAuth 2.0 is now preferred."
      }
    },
    {
      "@id": "amf://id#112",
      "@type": [
        "doc:AnnotationTypeDeclarationFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#1",
        "@type": [
          "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
          "doc:DomainProperty",
          "doc:DomainElement"
        ],
        "doc:name": "annotation",
        "raml-shapes:schema": {
          "@id": "amf://id#2",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "OAuth 2.0 allows to extend the specification with custom access token types,\nendpoint parameters, grant types or response types.\nThis annotation allows you to annotate the `settings` property of OAuth 2.0\nsecurity scheme type to inform applications about additional settings.\n## Use case\nLet's say a authorization server requires to send a `resource` query parameter\nwith the authorization request. The `resource` parameter can be any string.\nCurrently it is impossible to define this property in RAML file.\nSimilar if the code exchange request requires to put the `resource` parameter\ninto the request body.\nThis annotation allows you to define this parameter with the RAML definition\nand place the parameter in the right request.\n## Annotation Target\nThe [annotation target](https://github.com/raml-org/raml-spec/blob/master/versions/raml-10/raml-10.md#annotation-targets)\nfor those annotations is `SecuritySchemeSettings`.\nYou can only apply it to Security Scheme `settings` property.\n## Example\n```yaml\nannotationTypes:\n  customSettings: !include oauth-2-custom-settings.raml\nsecuritySchemes:\n  oauth2:\n    type: OAuth 2.0\n    describedBy:\n      headers:\n        Authorization:\n          example: \"Bearer token\"\n    settings:\n      (customSettings):\n        authorizationGrants: [custom_grant]\n        ignoreDefaultGrants:\n        authorizationSettings:\n          queryParameters:\n            resource:\n              type: string\n              required: true\n              description: |\n                A resource ID that defines a domain of authorization.\n          headers:\n            x-auth-resource:\n              type: string\n              required: false\n        accessTokenSettings:\n          body:\n            resource:\n              type: string\n              required: true\n              description: |\n                A resource ID that defines a domain of authorization.\n      accessTokenUri: https://auth.domain.com/authorize\n      authorizationUri: https://auth.domain.com/token\n      authorizationGrants: [implicit]\n      scopes: profile\n```\n## API console\nThis annotation is recognized and respected by API console.\n",
          "schema-org:name": "OAuth 2.0 custom settings",
          "shacl:closed": false,
          "shacl:name": "schema",
          "shacl:property": [
            {
              "@id": "amf://id#3",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#4",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "Settings to be applied to the `authorizationUri` GET request.\nDefine any query parameters or headers that are required by your OAuth 2.0\nauthorization server implementation.\nThis settings can be applied only to `token` and `code` requests\n",
                "schema-org:name": "Authorization settings",
                "shacl:closed": false,
                "shacl:name": "authorizationSettings",
                "shacl:property": [
                  {
                    "@id": "amf://id#5",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#6",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Query parameters to be applied to the `authorizationUri`.\nUse the same notation as RAML's `queryParameters`.\nIf you define a parameter that is already defined in OAuth 2.0 specification\n(RFC6749) it should be ignored by the processor.\n",
                      "schema-org:name": "Authorization query parameters",
                      "shacl:closed": false,
                      "shacl:name": "queryParameters",
                      "shacl:property": {
                        "@id": "amf://id#7",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#8",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:closed": false,
                          "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                          "shacl:property": []
                        },
                        "shacl:minCount": 0,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:path": {
                          "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                        }
                      }
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "queryParameters",
                    "shacl:path": {
                      "@id": "data:queryParameters"
                    }
                  },
                  {
                    "@id": "amf://id#9",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#10",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Headers to be set on the authorization request.\nUse the same notation as RAML's `headers`.\n",
                      "schema-org:name": "Authorization headers",
                      "shacl:closed": false,
                      "shacl:name": "headers",
                      "shacl:property": {
                        "@id": "amf://id#11",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#12",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:closed": false,
                          "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                          "shacl:property": []
                        },
                        "shacl:minCount": 0,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:path": {
                          "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                        }
                      }
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "headers",
                    "shacl:path": {
                      "@id": "data:headers"
                    }
                  }
                ]
              },
              "shacl:minCount": 0,
              "shacl:name": "authorizationSettings",
              "shacl:path": {
                "@id": "data:authorizationSettings"
              }
            },
            {
              "@id": "amf://id#13",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#14",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "Settings to be applied to the token endpoint POST request.\nDefine query parameters, headers or custom body paramaeters that should\nbe included into the request.\nNote, as per RFC6749, the request content type is `application/x-www-form-urlencoded`\nand the processor has to always assume this content type.\n",
                "schema-org:name": "Access token settings",
                "shacl:closed": false,
                "shacl:name": "accessTokenSettings",
                "shacl:property": [
                  {
                    "@id": "amf://id#15",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#16",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Query parameters to be applied to the `accessTokenUri`.\nUse the same notation as RAML's `queryParameters`.\nOAuth 2.0 specification does not specify any query parameters for this\ntype of request.\n",
                      "schema-org:name": "Token query parameters",
                      "shacl:closed": false,
                      "shacl:name": "queryParameters",
                      "shacl:property": {
                        "@id": "amf://id#17",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#18",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:closed": false,
                          "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                          "shacl:property": []
                        },
                        "shacl:minCount": 0,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:path": {
                          "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                        }
                      }
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "queryParameters",
                    "shacl:path": {
                      "@id": "data:queryParameters"
                    }
                  },
                  {
                    "@id": "amf://id#19",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#20",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Headers to be set on the token request.\nUse the same notation as RAML's `headers`.\n",
                      "schema-org:name": "Token request headers",
                      "shacl:closed": false,
                      "shacl:name": "headers",
                      "shacl:property": {
                        "@id": "amf://id#21",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#22",
                          "@type": [
                            "shacl:NodeShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "shacl:closed": false,
                          "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                          "shacl:property": []
                        },
                        "shacl:minCount": 0,
                        "shacl:name": "/a-zA-Z0-9\\-\\_/*",
                        "shacl:path": {
                          "@id": "data:%2Fa-zA-Z0-9%5C-%5C_%2F*"
                        }
                      }
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "headers",
                    "shacl:path": {
                      "@id": "data:headers"
                    }
                  },
                  {
                    "@id": "amf://id#23",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#24",
                      "@type": [
                        "shacl:NodeShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Body parameters to be applied to the `accessTokenUri`.\nProperties will be applied to the default set of OAuth 2.0 token request\nparameters.\nIf you define a parameter that is already defined in OAuth 2.0 specification\n(RFC6749) it should be ignored by the processor.\n",
                      "schema-org:name": "Token body parameters",
                      "shacl:closed": false,
                      "shacl:name": "body",
                      "shacl:property": []
                    },
                    "shacl:minCount": 0,
                    "shacl:name": "body",
                    "shacl:path": {
                      "@id": "data:body"
                    }
                  }
                ]
              },
              "shacl:minCount": 0,
              "shacl:name": "accessTokenSettings",
              "shacl:path": {
                "@id": "data:accessTokenSettings"
              }
            },
            {
              "@id": "amf://id#25",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#26",
                "@type": [
                  "raml-shapes:ArrayShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "raml-shapes:items": {
                  "@id": "amf://id#27",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  }
                },
                "schema-org:description": "List of custom authorization granst supported by your OAuth 2.0 server\n",
                "schema-org:name": "Custom authorization grants",
                "shacl:name": "authorizationGrants"
              },
              "shacl:minCount": 0,
              "shacl:name": "authorizationGrants",
              "shacl:path": {
                "@id": "data:authorizationGrants"
              }
            },
            {
              "@id": "amf://id#29",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#30",
                "@type": [
                  "raml-shapes:NilShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "shacl:name": "ignoreDefaultGrants"
              },
              "shacl:minCount": 0,
              "shacl:name": "ignoreDefaultGrants",
              "shacl:path": {
                "@id": "data:ignoreDefaultGrants"
              }
            }
          ]
        },
        "rdfs:domain": {
          "@id": "raml-http:SecuritySettings"
        }
      }
    },
    {
      "@id": "amf://id#113",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#94",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "raml-http:header": {
          "@id": "amf://id#95",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "header",
          "raml-http:paramName": "Authorization",
          "raml-http:schema": {
            "@id": "amf://id#96",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Standard authorization header.\n",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "schema"
          },
          "schema-org:description": "Standard authorization header.\n",
          "schema-org:name": "Authorization",
          "hydra:required": true
        },
        "security:name": "basic",
        "security:settings": {
          "@id": "amf://id#97",
          "@type": [
            "security:Settings",
            "doc:DomainElement"
          ],
          "security:additionalProperties": {
            "@id": "amf://id#98",
            "@type": "data:Object",
            "data:test": {
              "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2",
              "@type": "data:Object",
              "data:type": {
                "@id": "file://demo/demo-api/security/basic.raml#/fragment/settings/default/object_1/object_2/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "none"
                }
              }
            }
          }
        },
        "security:type": "Basic Authentication",
        "schema-org:description": "This API supports Basic Authentication for staging environment.\n"
      }
    },
    {
      "@id": "amf://id#114",
      "@type": [
        "doc:SecuritySchemeFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#61",
        "@type": [
          "security:SecurityScheme",
          "doc:DomainElement"
        ],
        "security:name": "digest",
        "security:type": "Digest Authentication",
        "schema-org:description": "This API supports DigestSecurityScheme Authentication for staging environment.\n"
      }
    }
  ]
}